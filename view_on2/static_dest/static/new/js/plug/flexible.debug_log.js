!function(e,t){function o(){var t=l.getBoundingClientRect().width;t/s>540&&(t=540*s);var o=t/10;l.style.fontSize=o+"px",d.rem=e.rem=o}var i,n=e.document,l=n.documentElement,a=n.querySelector('meta[name="viewport"]'),r=n.querySelector('meta[name="flexible"]'),s=0,c=0,d=t.flexible||(t.flexible={});if(a){var m=a.getAttribute("content").match(/initial\-scale=([\d\.]+)/);m&&(c=parseFloat(m[1]),s=parseInt(1/c)),console.log("metaEl="+a),console.log(a),console.log("dpr="+s),console.log("scale="+c)}else if(r){var p=r.getAttribute("content");if(p){var u=p.match(/initial\-dpr=([\d\.]+)/),f=p.match(/maximum\-dpr=([\d\.]+)/);u&&(s=parseFloat(u[1]),c=parseFloat((1/s).toFixed(2))),f&&(s=parseFloat(f[1]),c=parseFloat((1/s).toFixed(2)))}console.log("flexibleEl="+r),console.log(r),console.log("dpr="+s),console.log("scale="+c)}if(console.log("window.devicePixelRatio="+window.devicePixelRatio),!s&&!c){var g=e.navigator.appVersion.match(/android/gi),v=e.navigator.appVersion.match(/iphone/gi),x=e.devicePixelRatio;s=v?x>=3&&(!s||s>=3)?3:x>=2&&(!s||s>=2)?2:1:1,c=1/s,console.log("isAndroid="+g),console.log("isIPhone="+v),console.log("devicePixelRatio="+x),console.log("dpr="+s),console.log("scale="+c)}if(l.setAttribute("data-dpr",s),!a)if(a=n.createElement("meta"),a.setAttribute("name","viewport"),a.setAttribute("content","initial-scale="+c+", maximum-scale="+c+", minimum-scale="+c+", user-scalable=no"),l.firstElementChild)l.firstElementChild.appendChild(a);else{var h=n.createElement("div");h.appendChild(a),n.write(h.innerHTML)}e.addEventListener("resize",function(){clearTimeout(i),i=setTimeout(o,300)},!1),e.addEventListener("pageshow",function(e){e.persisted&&(clearTimeout(i),i=setTimeout(o,300))},!1),"complete"===n.readyState?n.body.style.fontSize=12*s+"px":n.addEventListener("DOMContentLoaded",function(e){n.body.style.fontSize=12*s+"px"},!1),o(),d.dpr=e.dpr=s,d.refreshRem=o,d.rem2px=function(e){var t=parseFloat(e)*this.rem;return"string"==typeof e&&e.match(/rem$/)&&(t+="px"),t},d.px2rem=function(e){var t=parseFloat(e)/this.rem;return"string"==typeof e&&e.match(/px$/)&&(t+="rem"),t}}(window,window.lib||(window.lib={}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
