!function(e,t){function i(){var t=n.getBoundingClientRect().width;t/m>540&&(t=540*m);var i=t/10;n.style.fontSize=i+"px",s.rem=e.rem=i}var a,r=e.document,n=r.documentElement,o=r.querySelector('meta[name="viewport"]'),l=r.querySelector('meta[name="flexible"]'),m=0,d=0,s=t.flexible||(t.flexible={});if(o){var p=o.getAttribute("content").match(/initial\-scale=([\d\.]+)/);p&&(d=parseFloat(p[1]),m=parseInt(1/d))}else if(l){var c=l.getAttribute("content");if(c){var u=c.match(/initial\-dpr=([\d\.]+)/),f=c.match(/maximum\-dpr=([\d\.]+)/);u&&(m=parseFloat(u[1]),d=parseFloat((1/m).toFixed(2))),f&&(m=parseFloat(f[1]),d=parseFloat((1/m).toFixed(2)))}}if(!m&&!d){var v=(e.navigator.appVersion.match(/android/gi),e.navigator.appVersion.match(/iphone/gi)),h=e.devicePixelRatio;m=v?h>=3&&(!m||m>=3)?3:h>=2&&(!m||m>=2)?2:1:1,d=1/m}if(n.setAttribute("data-dpr",m),!o)if(o=r.createElement("meta"),o.setAttribute("name","viewport"),o.setAttribute("content","initial-scale="+d+", maximum-scale="+d+", minimum-scale="+d+", user-scalable=no"),n.firstElementChild)n.firstElementChild.appendChild(o);else{var x=r.createElement("div");x.appendChild(o),r.write(x.innerHTML)}e.addEventListener("resize",function(){clearTimeout(a),a=setTimeout(i,300)},!1),e.addEventListener("pageshow",function(e){e.persisted&&(clearTimeout(a),a=setTimeout(i,300))},!1),"complete"===r.readyState?r.body.style.fontSize=12*m+"px":r.addEventListener("DOMContentLoaded",function(e){r.body.style.fontSize=12*m+"px"},!1),i(),s.dpr=e.dpr=m,s.refreshRem=i,s.rem2px=function(e){var t=parseFloat(e)*this.rem;return"string"==typeof e&&e.match(/rem$/)&&(t+="px"),t},s.px2rem=function(e){var t=parseFloat(e)/this.rem;return"string"==typeof e&&e.match(/px$/)&&(t+="rem"),t}}(window,window.lib||(window.lib={}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWcvZmxleGlibGUuZGVidWcuanMiXSwibmFtZXMiOlsid2luIiwibGliIiwicmVmcmVzaFJlbSIsIndpZHRoIiwiZG9jRWwiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJkcHIiLCJyZW0iLCJzdHlsZSIsImZvbnRTaXplIiwiZmxleGlibGUiLCJ0aWQiLCJkb2MiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsIm1ldGFFbCIsInF1ZXJ5U2VsZWN0b3IiLCJmbGV4aWJsZUVsIiwic2NhbGUiLCJtYXRjaCIsImdldEF0dHJpYnV0ZSIsInBhcnNlRmxvYXQiLCJwYXJzZUludCIsImNvbnRlbnQiLCJpbml0aWFsRHByIiwibWF4aW11bURwciIsInRvRml4ZWQiLCJpc0lQaG9uZSIsIm5hdmlnYXRvciIsImFwcFZlcnNpb24iLCJkZXZpY2VQaXhlbFJhdGlvIiwic2V0QXR0cmlidXRlIiwiY3JlYXRlRWxlbWVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiYXBwZW5kQ2hpbGQiLCJ3cmFwIiwid3JpdGUiLCJpbm5lckhUTUwiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImUiLCJwZXJzaXN0ZWQiLCJyZWFkeVN0YXRlIiwiYm9keSIsInJlbTJweCIsImQiLCJ2YWwiLCJ0aGlzIiwicHgycmVtIiwid2luZG93Il0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFBQSxFQUFBQyxHQW1FQSxRQUFBQyxLQUNBLEdBQUFDLEdBQUFDLEVBQUFDLHdCQUFBRixLQUNBQSxHQUFBRyxFQUFBLE1BQ0FILEVBQUEsSUFBQUcsRUFFQSxJQUFBQyxHQUFBSixFQUFBLEVBQ0FDLEdBQUFJLE1BQUFDLFNBQUFGLEVBQUEsS0FDQUcsRUFBQUgsSUFBQVAsRUFBQU8sSUFBQUEsRUF6RUEsR0FNQUksR0FOQUMsRUFBQVosRUFBQWEsU0FDQVQsRUFBQVEsRUFBQUUsZ0JBQ0FDLEVBQUFILEVBQUFJLGNBQUEseUJBQ0FDLEVBQUFMLEVBQUFJLGNBQUEseUJBQ0FWLEVBQUEsRUFDQVksRUFBQSxFQUVBUixFQUFBVCxFQUFBUyxXQUFBVCxFQUFBUyxZQUVBLElBQUFLLEVBQUEsQ0FFQSxHQUFBSSxHQUFBSixFQUFBSyxhQUFBLFdBQUFELE1BQUEsMkJBQ0FBLEtBQ0FELEVBQUFHLFdBQUFGLEVBQUEsSUFDQWIsRUFBQWdCLFNBQUEsRUFBQUosUUFFQSxJQUFBRCxFQUFBLENBQ0EsR0FBQU0sR0FBQU4sRUFBQUcsYUFBQSxVQUNBLElBQUFHLEVBQUEsQ0FDQSxHQUFBQyxHQUFBRCxFQUFBSixNQUFBLDBCQUNBTSxFQUFBRixFQUFBSixNQUFBLHlCQUNBSyxLQUNBbEIsRUFBQWUsV0FBQUcsRUFBQSxJQUNBTixFQUFBRyxZQUFBLEVBQUFmLEdBQUFvQixRQUFBLEtBRUFELElBQ0FuQixFQUFBZSxXQUFBSSxFQUFBLElBQ0FQLEVBQUFHLFlBQUEsRUFBQWYsR0FBQW9CLFFBQUEsTUFLQSxJQUFBcEIsSUFBQVksRUFBQSxDQUNBLEdBQ0FTLElBREEzQixFQUFBNEIsVUFBQUMsV0FBQVYsTUFBQSxhQUNBbkIsRUFBQTRCLFVBQUFDLFdBQUFWLE1BQUEsYUFDQVcsRUFBQTlCLEVBQUE4QixnQkFJQXhCLEdBSEFxQixFQUVBRyxHQUFBLEtBQUF4QixHQUFBQSxHQUFBLEdBQ0EsRUFDQXdCLEdBQUEsS0FBQXhCLEdBQUFBLEdBQUEsR0FDQSxFQUVBLEVBSUEsRUFFQVksRUFBQSxFQUFBWixFQUlBLEdBREFGLEVBQUEyQixhQUFBLFdBQUF6QixJQUNBUyxFQUlBLEdBSEFBLEVBQUFILEVBQUFvQixjQUFBLFFBQ0FqQixFQUFBZ0IsYUFBQSxPQUFBLFlBQ0FoQixFQUFBZ0IsYUFBQSxVQUFBLGlCQUFBYixFQUFBLG1CQUFBQSxFQUFBLG1CQUFBQSxFQUFBLHNCQUNBZCxFQUFBNkIsa0JBQ0E3QixFQUFBNkIsa0JBQUFDLFlBQUFuQixPQUNBLENBQ0EsR0FBQW9CLEdBQUF2QixFQUFBb0IsY0FBQSxNQUNBRyxHQUFBRCxZQUFBbkIsR0FDQUgsRUFBQXdCLE1BQUFELEVBQUFFLFdBY0FyQyxFQUFBc0MsaUJBQUEsU0FBQSxXQUNBQyxhQUFBNUIsR0FDQUEsRUFBQTZCLFdBQUF0QyxFQUFBLE9BQ0EsR0FDQUYsRUFBQXNDLGlCQUFBLFdBQUEsU0FBQUcsR0FDQUEsRUFBQUMsWUFDQUgsYUFBQTVCLEdBQ0FBLEVBQUE2QixXQUFBdEMsRUFBQSxRQUVBLEdBRUEsYUFBQVUsRUFBQStCLFdBQ0EvQixFQUFBZ0MsS0FBQXBDLE1BQUFDLFNBQUEsR0FBQUgsRUFBQSxLQUVBTSxFQUFBMEIsaUJBQUEsbUJBQUEsU0FBQUcsR0FDQTdCLEVBQUFnQyxLQUFBcEMsTUFBQUMsU0FBQSxHQUFBSCxFQUFBLE9BQ0EsR0FJQUosSUFFQVEsRUFBQUosSUFBQU4sRUFBQU0sSUFBQUEsRUFDQUksRUFBQVIsV0FBQUEsRUFDQVEsRUFBQW1DLE9BQUEsU0FBQUMsR0FDQSxHQUFBQyxHQUFBMUIsV0FBQXlCLEdBQUFFLEtBQUF6QyxHQUlBLE9BSEEsZ0JBQUF1QyxJQUFBQSxFQUFBM0IsTUFBQSxVQUNBNEIsR0FBQSxNQUVBQSxHQUVBckMsRUFBQXVDLE9BQUEsU0FBQUgsR0FDQSxHQUFBQyxHQUFBMUIsV0FBQXlCLEdBQUFFLEtBQUF6QyxHQUlBLE9BSEEsZ0JBQUF1QyxJQUFBQSxFQUFBM0IsTUFBQSxTQUNBNEIsR0FBQSxPQUVBQSxJQUdBRyxPQUFBQSxPQUFBLE1BQUFBLE9BQUEiLCJmaWxlIjoicGx1Zy9mbGV4aWJsZS5kZWJ1Zy5qcyIsInNvdXJjZXNDb250ZW50IjpbIjsoZnVuY3Rpb24od2luLCBsaWIpIHtcbiAgICB2YXIgZG9jID0gd2luLmRvY3VtZW50O1xuICAgIHZhciBkb2NFbCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgdmFyIG1ldGFFbCA9IGRvYy5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJ2aWV3cG9ydFwiXScpO1xuICAgIHZhciBmbGV4aWJsZUVsID0gZG9jLnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT1cImZsZXhpYmxlXCJdJyk7XG4gICAgdmFyIGRwciA9IDA7XG4gICAgdmFyIHNjYWxlID0gMDtcbiAgICB2YXIgdGlkO1xuICAgIHZhciBmbGV4aWJsZSA9IGxpYi5mbGV4aWJsZSB8fCAobGliLmZsZXhpYmxlID0ge30pO1xuICAgIFxuICAgIGlmIChtZXRhRWwpIHtcbiAgICAgICAgLy9jb25zb2xlLndhcm4oJ+WwhuagueaNruW3suacieeahG1ldGHmoIfnrb7mnaXorr7nva7nvKnmlL7mr5TkvosnKTtcbiAgICAgICAgdmFyIG1hdGNoID0gbWV0YUVsLmdldEF0dHJpYnV0ZSgnY29udGVudCcpLm1hdGNoKC9pbml0aWFsXFwtc2NhbGU9KFtcXGRcXC5dKykvKTtcbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBzY2FsZSA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICAgICAgICAgICAgZHByID0gcGFyc2VJbnQoMSAvIHNjYWxlKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZmxleGlibGVFbCkge1xuICAgICAgICB2YXIgY29udGVudCA9IGZsZXhpYmxlRWwuZ2V0QXR0cmlidXRlKCdjb250ZW50Jyk7XG4gICAgICAgIGlmIChjb250ZW50KSB7XG4gICAgICAgICAgICB2YXIgaW5pdGlhbERwciA9IGNvbnRlbnQubWF0Y2goL2luaXRpYWxcXC1kcHI9KFtcXGRcXC5dKykvKTtcbiAgICAgICAgICAgIHZhciBtYXhpbXVtRHByID0gY29udGVudC5tYXRjaCgvbWF4aW11bVxcLWRwcj0oW1xcZFxcLl0rKS8pO1xuICAgICAgICAgICAgaWYgKGluaXRpYWxEcHIpIHtcbiAgICAgICAgICAgICAgICBkcHIgPSBwYXJzZUZsb2F0KGluaXRpYWxEcHJbMV0pO1xuICAgICAgICAgICAgICAgIHNjYWxlID0gcGFyc2VGbG9hdCgoMSAvIGRwcikudG9GaXhlZCgyKSk7ICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1heGltdW1EcHIpIHtcbiAgICAgICAgICAgICAgICBkcHIgPSBwYXJzZUZsb2F0KG1heGltdW1EcHJbMV0pO1xuICAgICAgICAgICAgICAgIHNjYWxlID0gcGFyc2VGbG9hdCgoMSAvIGRwcikudG9GaXhlZCgyKSk7ICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFkcHIgJiYgIXNjYWxlKSB7XG4gICAgICAgIHZhciBpc0FuZHJvaWQgPSB3aW4ubmF2aWdhdG9yLmFwcFZlcnNpb24ubWF0Y2goL2FuZHJvaWQvZ2kpO1xuICAgICAgICB2YXIgaXNJUGhvbmUgPSB3aW4ubmF2aWdhdG9yLmFwcFZlcnNpb24ubWF0Y2goL2lwaG9uZS9naSk7XG4gICAgICAgIHZhciBkZXZpY2VQaXhlbFJhdGlvID0gd2luLmRldmljZVBpeGVsUmF0aW87XG4gICAgICAgIGlmIChpc0lQaG9uZSkge1xuICAgICAgICAgICAgLy8gaU9T5LiL77yM5a+55LqOMuWSjDPnmoTlsY/vvIznlKgy5YCN55qE5pa55qGI77yM5YW25L2Z55qE55SoMeWAjeaWueahiFxuICAgICAgICAgICAgaWYgKGRldmljZVBpeGVsUmF0aW8gPj0gMyAmJiAoIWRwciB8fCBkcHIgPj0gMykpIHsgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZHByID0gMztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGV2aWNlUGl4ZWxSYXRpbyA+PSAyICYmICghZHByIHx8IGRwciA+PSAyKSl7XG4gICAgICAgICAgICAgICAgZHByID0gMjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZHByID0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOWFtuS7luiuvuWkh+S4i++8jOS7jeaXp+S9v+eUqDHlgI3nmoTmlrnmoYhcbiAgICAgICAgICAgIGRwciA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgc2NhbGUgPSAxIC8gZHByO1xuICAgIH1cblxuICAgIGRvY0VsLnNldEF0dHJpYnV0ZSgnZGF0YS1kcHInLCBkcHIpO1xuICAgIGlmICghbWV0YUVsKSB7XG4gICAgICAgIG1ldGFFbCA9IGRvYy5jcmVhdGVFbGVtZW50KCdtZXRhJyk7XG4gICAgICAgIG1ldGFFbC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAndmlld3BvcnQnKTtcbiAgICAgICAgbWV0YUVsLnNldEF0dHJpYnV0ZSgnY29udGVudCcsICdpbml0aWFsLXNjYWxlPScgKyBzY2FsZSArICcsIG1heGltdW0tc2NhbGU9JyArIHNjYWxlICsgJywgbWluaW11bS1zY2FsZT0nICsgc2NhbGUgKyAnLCB1c2VyLXNjYWxhYmxlPW5vJyk7XG4gICAgICAgIGlmIChkb2NFbC5maXJzdEVsZW1lbnRDaGlsZCkge1xuICAgICAgICAgICAgZG9jRWwuZmlyc3RFbGVtZW50Q2hpbGQuYXBwZW5kQ2hpbGQobWV0YUVsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciB3cmFwID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgd3JhcC5hcHBlbmRDaGlsZChtZXRhRWwpO1xuICAgICAgICAgICAgZG9jLndyaXRlKHdyYXAuaW5uZXJIVE1MKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlZnJlc2hSZW0oKXtcbiAgICAgICAgdmFyIHdpZHRoID0gZG9jRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG4gICAgICAgIGlmICh3aWR0aCAvIGRwciA+IDU0MCkge1xuICAgICAgICAgICAgd2lkdGggPSA1NDAgKiBkcHI7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlbSA9IHdpZHRoIC8gMTA7XG4gICAgICAgIGRvY0VsLnN0eWxlLmZvbnRTaXplID0gcmVtICsgJ3B4JztcbiAgICAgICAgZmxleGlibGUucmVtID0gd2luLnJlbSA9IHJlbTtcbiAgICB9XG5cbiAgICB3aW4uYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aWQpO1xuICAgICAgICB0aWQgPSBzZXRUaW1lb3V0KHJlZnJlc2hSZW0sIDMwMCk7XG4gICAgfSwgZmFsc2UpO1xuICAgIHdpbi5hZGRFdmVudExpc3RlbmVyKCdwYWdlc2hvdycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUucGVyc2lzdGVkKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGlkKTtcbiAgICAgICAgICAgIHRpZCA9IHNldFRpbWVvdXQocmVmcmVzaFJlbSwgMzAwKTtcbiAgICAgICAgfVxuICAgIH0sIGZhbHNlKTtcblxuICAgIGlmIChkb2MucmVhZHlTdGF0ZSA9PT0gJ2NvbXBsZXRlJykge1xuICAgICAgICBkb2MuYm9keS5zdHlsZS5mb250U2l6ZSA9IDEyICogZHByICsgJ3B4JztcbiAgICB9IGVsc2Uge1xuICAgICAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGRvYy5ib2R5LnN0eWxlLmZvbnRTaXplID0gMTIgKiBkcHIgKyAncHgnO1xuICAgICAgICB9LCBmYWxzZSk7XG4gICAgfVxuICAgIFxuXG4gICAgcmVmcmVzaFJlbSgpO1xuXG4gICAgZmxleGlibGUuZHByID0gd2luLmRwciA9IGRwcjtcbiAgICBmbGV4aWJsZS5yZWZyZXNoUmVtID0gcmVmcmVzaFJlbTtcbiAgICBmbGV4aWJsZS5yZW0ycHggPSBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciB2YWwgPSBwYXJzZUZsb2F0KGQpICogdGhpcy5yZW07XG4gICAgICAgIGlmICh0eXBlb2YgZCA9PT0gJ3N0cmluZycgJiYgZC5tYXRjaCgvcmVtJC8pKSB7XG4gICAgICAgICAgICB2YWwgKz0gJ3B4JztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgICBmbGV4aWJsZS5weDJyZW0gPSBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciB2YWwgPSBwYXJzZUZsb2F0KGQpIC8gdGhpcy5yZW07XG4gICAgICAgIGlmICh0eXBlb2YgZCA9PT0gJ3N0cmluZycgJiYgZC5tYXRjaCgvcHgkLykpIHtcbiAgICAgICAgICAgIHZhbCArPSAncmVtJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cblxufSkod2luZG93LCB3aW5kb3dbJ2xpYiddIHx8ICh3aW5kb3dbJ2xpYiddID0ge30pKTsiXX0=
