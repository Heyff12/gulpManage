"use strict";require(["../require-config"],function(){require(["zepto","ajax_rule","yanzheng","date_change","scroll_more","if_menu","native"],function($,o,t,i,e,a,n){$(function(){var i=!1,c={menus:[{type:"uri",uri:"http://wx.qfpay.com/near-v2/save-currency.html",icon:location.protocol+"//"+location.host+"/prepaid/v1/static/new/img/ic_praise.png",title:"优秀案例"},{type:"uri",uri:location.protocol+"//"+location.host+"/prepaid/v1/page/b/user_guide.html",icon:location.protocol+"//"+location.host+"/prepaid/v1/static/new/img/ic_question.png",title:"常见问题"}],buttons:[{type:"uri",uri:location.protocol+"//"+location.host+"/prepaid/v1/page/b/bill.html",icon:"",title:"账单"}]};n.setNavMenu(c,function(o){console.log(o.ret)}),e.add_load_img(".section_action");new Vue({el:"#wap",data:{stored:{user_num:0,total_txamt:0,total_pay_amt:0,total_balances:0},membershome:[],activities:[],due_fee:0,action_ing:1,money_url:location.protocol+"//"+location.host+"/prepaid/v1/api/b/stat/activities",member_url:location.protocol+"//"+location.host+"/prepaid/v1/api/b/members",activity_url:location.protocol+"//"+location.host+"/prepaid/v1/api/b/activity_history",due_url:location.protocol+"//"+location.host+"/prepaid/v1/api/service/info",action_all:"",action_count:6,action_pos:6},created:function(){this.get_money(),this.get_member(),this.get_activity(),this.get_due()},mounted:function(){e.scroll_more(this.get_moredata)},updated:function(){e.scroll_data.body_height=Math.floor($("body").height()+90).toFixed(0),console.log("AJAX:body_height=="+e.scroll_data.body_height)},methods:{goto_members:function(){var o=location.protocol+"//"+location.host+"/prepaid/v1/page/b/members/index.html";a.goto_url(o)},goto_downpic:function(){var o=location.protocol+"//"+location.host+"/prepaid/v1/page/b/show_material.html";a.goto_url(o)},goto_scandetail:function(o){var t=location.protocol+"//"+location.host+"/prepaid/v1/page/b/activity_detail.html?activity_id="+o;a.goto_url(t)},goto_create_ac:function(){var o=location.protocol+"//"+location.host+"/prepaid/v1/page/b/create_activity.html";a.goto_url(o)},goto_renew:function(){var o={uri:i?"hjsh://member/pay":"nearmcht://view-member-pay"};n.openUri(o,function(o){var t={uri:location.protocol+"//"+location.host+"/prepaid/v1/page/b/index.html"};n.navToUri(t,function(o){console.log(o.ret)})})},goto_now_members:function(o){var t=location.protocol+"//"+location.host+"/prepaid/v1/page/b/members/specifies-activity.html?activity_id="+o;a.goto_url(t)},goto_now_money:function(o){var t=location.protocol+"//"+location.host+"/prepaid/v1/page/b/prepaid_amt_of_activity.html?activity_id="+o;a.goto_url(t)},get_money:function(){var t=this;o.ajax_rule(t.money_url,"get","json","",".zheceng",function(o){t.stored=o})},get_member:function(){var t=this;o.ajax_rule(t.member_url,"get","json","",".zheceng1",function(o){0==o.length?t.membershome=[]:t.membershome=o.slice(0,5)})},get_activity:function(){var t=this,i={pos:0,count:1e5};o.ajax_rule(t.activity_url,"get","json",i,".zheceng1",function(o){t.action_all=o,t.activities=t.action_all.slice(0,t.action_pos),t.action_ing=t.activities[0].status,1==t.activities.length&&t.donghua_if(t.activities[0].activity_id),t.action_all.length-t.action_pos<=0?(e.nomoredata_show(),window.setTimeout(e.nomoredata_hide,2e3),e.scroll_data.nomor_show=!1,e.scroll_data.scroll_if=!1):(t.action_pos+=t.action_count,e.scroll_data.scroll_if=!0),e.scroll_data.body_height=Math.floor($("body").height()+90).toFixed(0),$(".load").hide()})},get_due:function(){var e=this;({h:t.get_hash("h")});o.ajax_rule(e.due_url,"get","json","",".zheceng2",function(o){e.due_fee=o.expired,i=o.is_qfgroup})},get_moredata:function(){this.activities=this.action_all.slice(0,this.action_pos),console.log(this.activities.length),this.action_all.length-this.action_pos<=0?(e.nomoredata_show(),window.setTimeout(e.nomoredata_hide,2e3),e.scroll_data.nomor_show=!1,e.scroll_data.scroll_if=!1):(this.action_pos+=this.action_count,e.scroll_data.scroll_if=!0),$(".load").hide(),console.log("AJAX:scroll_if=="+e.scroll_data.scroll_if),console.log("AJAX:nomor_show=="+e.scroll_data.nomor_show)},donghua_if:function(t){var i=this,e={guide_type:1,activity_id:t};o.ajax_rule("/prepaid/v1/api/b/guide","get","json",e,".zheceng2",function(o){var e=o.show;if("1"==e){var a={uri:"hjsh://ppay/guide"};n.openUri(a,function(o){console.log(o.ret)}),i.donghua_off(t)}})},donghua_off:function(t){var i={guide_type:1,activity_id:t};o.ajax_rule("/prepaid/v1/api/b/guide","POST","json",i,".zheceng1")},datechange:function(o){var t=o.substr(0,10),i=t.split("-"),e=i[0],a=this.num_change(i[1]),n=this.num_change(i[2]),c=e+"."+a+"."+n;return c},datechange2:function(o,t){var i=o.substr(0,10),e=t.substr(0,10),a=i.split("-"),n=e.split("-"),c=a[0],r=n[0],l=this.num_change(n[1]),s=this.num_change(n[2]);return c!=r?r+"."+l+"."+s:l+"."+s},num_change:function(o){return o<10?o.substr(-1):o}}})})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImIvaG9tZS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiJCIsImFqYXhfcnVsZSIsInlhbnpoZW5nIiwiZGF0ZV9jaGFuZ2UiLCJzY3JvbGxfbW9yZSIsImlmX21lbnUiLCJuYXRpdmUiLCJpc19xZmdyb3VwIiwibWVudV9kYXRhIiwibWVudXMiLCJ0eXBlIiwidXJpIiwiaWNvbiIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJob3N0IiwidGl0bGUiLCJidXR0b25zIiwic2V0TmF2TWVudSIsImNiIiwiY29uc29sZSIsImxvZyIsInJldCIsImFkZF9sb2FkX2ltZyIsIlZ1ZSIsImVsIiwiZGF0YSIsInN0b3JlZCIsInVzZXJfbnVtIiwidG90YWxfdHhhbXQiLCJ0b3RhbF9wYXlfYW10IiwidG90YWxfYmFsYW5jZXMiLCJtZW1iZXJzaG9tZSIsImFjdGl2aXRpZXMiLCJkdWVfZmVlIiwiYWN0aW9uX2luZyIsIm1vbmV5X3VybCIsIm1lbWJlcl91cmwiLCJhY3Rpdml0eV91cmwiLCJkdWVfdXJsIiwiYWN0aW9uX2FsbCIsImFjdGlvbl9jb3VudCIsImFjdGlvbl9wb3MiLCJjcmVhdGVkIiwidGhpcyIsImdldF9tb25leSIsImdldF9tZW1iZXIiLCJnZXRfYWN0aXZpdHkiLCJnZXRfZHVlIiwibW91bnRlZCIsImdldF9tb3JlZGF0YSIsInVwZGF0ZWQiLCJzY3JvbGxfZGF0YSIsImJvZHlfaGVpZ2h0IiwiTWF0aCIsImZsb29yIiwiaGVpZ2h0IiwidG9GaXhlZCIsIm1ldGhvZHMiLCJnb3RvX21lbWJlcnMiLCJ1cmxfdmFsIiwiZ290b191cmwiLCJnb3RvX2Rvd25waWMiLCJnb3RvX3NjYW5kZXRhaWwiLCJhY3Rpdml0eV9pZCIsImdvdG9fY3JlYXRlX2FjIiwiZ290b19yZW5ldyIsIm9wZW5VcmlEYXRhIiwib3BlblVyaSIsImNsb3NlVG9VcmkiLCJuYXZUb1VyaSIsImdvdG9fbm93X21lbWJlcnMiLCJnb3RvX25vd19tb25leSIsIl90aGlzIiwiZGF0YV9yZXR1cm4iLCJsZW5ndGgiLCJzbGljZSIsInBvc3RfZGF0YSIsInBvcyIsImNvdW50Iiwic3RhdHVzIiwiZG9uZ2h1YV9pZiIsIm5vbW9yZWRhdGFfc2hvdyIsIndpbmRvdyIsInNldFRpbWVvdXQiLCJub21vcmVkYXRhX2hpZGUiLCJub21vcl9zaG93Iiwic2Nyb2xsX2lmIiwiaGlkZSIsImgiLCJnZXRfaGFzaCIsImV4cGlyZWQiLCJndWlkZV90eXBlIiwic2hvdyIsInVybF9kYXRhIiwiZG9uZ2h1YV9vZmYiLCJkYXRlY2hhbmdlIiwidGltZSIsImRhdGVfdmFsIiwic3Vic3RyIiwiZGF0ZV92YWx1ZSIsInNwbGl0IiwieWVhciIsIm1vbnRoIiwibnVtX2NoYW5nZSIsImRheSIsIm5ld19kYXRlIiwiZGF0ZWNoYW5nZTIiLCJ0aW1lMSIsInRpbWUyIiwiZGF0ZV92YWwxIiwiZGF0ZV92YWwyIiwiZGF0ZV92YWx1ZTEiLCJkYXRlX3ZhbHVlMiIsInllYXIxIiwieWVhcjIiLCJudW0iXSwibWFwcGluZ3MiOiJZQUFBQSxVQUFTLHFCQUFzQixXQUMzQkEsU0FBUyxRQUFTLFlBQWEsV0FBWSxjQUFlLGNBQWUsVUFBVyxVQUFXLFNBQVNDLEVBQUdDLEVBQVdDLEVBQVVDLEVBQWFDLEVBQWFDLEVBQVNDLEdBQy9KTixFQUFFLFdBQ0UsR0FBSU8sSUFBYSxFQUViQyxHQUNBQyxRQUNJQyxLQUFNLE1BQ05DLElBQUssaURBQ0xDLEtBQU1DLFNBQVNDLFNBQVcsS0FBT0QsU0FBU0UsS0FBTywyQ0FDakRDLE1BQU8sU0FFUE4sS0FBTSxNQUNOQyxJQUFLRSxTQUFTQyxTQUFXLEtBQU9ELFNBQVNFLEtBQU8scUNBQ2hESCxLQUFNQyxTQUFTQyxTQUFXLEtBQU9ELFNBQVNFLEtBQU8sNkNBQ2pEQyxNQUFPLFNBR1hDLFVBQ0lQLEtBQU0sTUFDTkMsSUFBS0UsU0FBU0MsU0FBVyxLQUFPRCxTQUFTRSxLQUFPLCtCQUNoREgsS0FBTSxHQUNOSSxNQUFPLE9BSWZWLEdBQU9ZLFdBQVdWLEVBQVcsU0FBU1csR0FDbENDLFFB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SUFBTUUsR0FJN0JELFdBQVksU0FBU1ksR0FDakIsTUFBSUEsR0FBTSxHQUNDQSxFQUFJakIsUUFBTyxHQUVYaUIiLCJmaWxlIjoiYi9ob21lLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZShbJy4uL3JlcXVpcmUtY29uZmlnJ10sIGZ1bmN0aW9uKCkge1xuICAgIHJlcXVpcmUoW1wiemVwdG9cIiwgXCJhamF4X3J1bGVcIiwgXCJ5YW56aGVuZ1wiLCBcImRhdGVfY2hhbmdlXCIsIFwic2Nyb2xsX21vcmVcIiwgXCJpZl9tZW51XCIsIFwibmF0aXZlXCJdLCBmdW5jdGlvbigkLCBhamF4X3J1bGUsIHlhbnpoZW5nLCBkYXRlX2NoYW5nZSwgc2Nyb2xsX21vcmUsIGlmX21lbnUsIG5hdGl2ZSkge1xuICAgICAgICAkKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGlzX3FmZ3JvdXAgPSBmYWxzZTtcbiAgICAgICAgICAgIC8v6K6+572u5Y+z6L6555qE6I+c5Y2V5oyJ6ZKuXG4gICAgICAgICAgICB2YXIgbWVudV9kYXRhID0ge1xuICAgICAgICAgICAgICAgIG1lbnVzOiBbe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAndXJpJyxcbiAgICAgICAgICAgICAgICAgICAgdXJpOiAnaHR0cDovL3d4LnFmcGF5LmNvbS9uZWFyLXYyL3NhdmUtY3VycmVuY3kuaHRtbCcsXG4gICAgICAgICAgICAgICAgICAgIGljb246IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvc3RhdGljL25ldy9pbWcvaWNfcHJhaXNlLnBuZycsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5LyY56eA5qGI5L6LJyxcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICd1cmknLFxuICAgICAgICAgICAgICAgICAgICB1cmk6IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvcGFnZS9iL3VzZXJfZ3VpZGUuaHRtbCcsXG4gICAgICAgICAgICAgICAgICAgIGljb246IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvc3RhdGljL25ldy9pbWcvaWNfcXVlc3Rpb24ucG5nJyxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfluLjop4Hpl67popgnLFxuICAgICAgICAgICAgICAgIH1dLFxuXG4gICAgICAgICAgICAgICAgYnV0dG9uczogW3tcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3VyaScsXG4gICAgICAgICAgICAgICAgICAgIHVyaTogbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArICcvcHJlcGFpZC92MS9wYWdlL2IvYmlsbC5odG1sJyxcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogJycsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn6LSm5Y2VJyxcbiAgICAgICAgICAgICAgICB9XSxcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIG5hdGl2ZS5zZXROYXZNZW51KG1lbnVfZGF0YSwgZnVuY3Rpb24oY2IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjYi5yZXQpXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy/mt7vliqDlm77moIflkozmsqHmnInmm7TlpJrmloflrZfmj5DnpLpcbiAgICAgICAgICAgIHNjcm9sbF9tb3JlLmFkZF9sb2FkX2ltZygnLnNlY3Rpb25fYWN0aW9uJyk7XG4gICAgICAgICAgICB2YXIgZGVtbyA9IG5ldyBWdWUoe1xuICAgICAgICAgICAgICAgIGVsOiAnI3dhcCcsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBzdG9yZWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidXNlcl9udW1cIjogMCwgLy8g5Y+C5LiO6L+H5YKo5YC85rS75Yqo55qEIOaAu+eUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJ0b3RhbF90eGFtdFwiOiAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIFwidG90YWxfcGF5X2FtdFwiOiAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIFwidG90YWxfYmFsYW5jZXNcIjogMCwgLy8g5oC75L2Z6aKdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG1lbWJlcnNob21lOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZpdGllczogW10sXG4gICAgICAgICAgICAgICAgICAgIGR1ZV9mZWU6IDAsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbl9pbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgIG1vbmV5X3VybDogbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArICcvcHJlcGFpZC92MS9hcGkvYi9zdGF0L2FjdGl2aXRpZXMnLFxuICAgICAgICAgICAgICAgICAgICBtZW1iZXJfdXJsOiBsb2NhdGlvbi5wcm90b2NvbCArICcvLycgKyBsb2NhdGlvbi5ob3N0ICsgJy9wcmVwYWlkL3YxL2FwaS9iL21lbWJlcnMnLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpdml0eV91cmw6IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvYXBpL2IvYWN0aXZpdHlfaGlzdG9yeScsXG4gICAgICAgICAgICAgICAgICAgIGR1ZV91cmw6IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvYXBpL3NlcnZpY2UvaW5mbycsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbl9hbGw6ICcnLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25fY291bnQ6IDYsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbl9wb3M6IDYsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjcmVhdGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRfbW9uZXkoKTsgLy/ojrflj5bph5Hpop3mlbDmja5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRfbWVtYmVyKCk7IC8v6I635Y+W5Lya5ZGYXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0X2FjdGl2aXR5KCk7IC8v6I635Y+W5rS75Yqo5YiX6KGoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0X2R1ZSgpOyAvL+iOt+WPlue7rei0ueWIsOacn+S4juWQplxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbW91bnRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbF9tb3JlLnNjcm9sbF9tb3JlKHRoaXMuZ2V0X21vcmVkYXRhKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVwZGF0ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5ib2R5X2hlaWdodCA9IE1hdGguZmxvb3IoJCgnYm9keScpLmhlaWdodCgpKzkwKS50b0ZpeGVkKDApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQUpBWDpib2R5X2hlaWdodD09JyArIHNjcm9sbF9tb3JlLnNjcm9sbF9kYXRhLmJvZHlfaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1ldGhvZHM6IHtcbiAgICAgICAgICAgICAgICAgICAgLy/ov5vlhaXlhajpg6jkvJrlkZjpobXpnaJcbiAgICAgICAgICAgICAgICAgICAgZ290b19tZW1iZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmxfdmFsID0gbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArICcvcHJlcGFpZC92MS9wYWdlL2IvbWVtYmVycy9pbmRleC5odG1sJztcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxvY2F0aW9uLmhyZWYgPSB1cmxfdmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWZfbWVudS5nb3RvX3VybCh1cmxfdmFsKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/ov5vlhaXotYTmlpnkuIvovb3nlYzpnaJcbiAgICAgICAgICAgICAgICAgICAgZ290b19kb3ducGljOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmxfdmFsID0gbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArICcvcHJlcGFpZC92MS9wYWdlL2Ivc2hvd19tYXRlcmlhbC5odG1sJztcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxvY2F0aW9uLmhyZWYgPSB1cmxfdmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWZfbWVudS5nb3RvX3VybCh1cmxfdmFsKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/ov5vlhaXmtLvliqjor6bmg4Xmn6XnnIvnlYzpnaJcbiAgICAgICAgICAgICAgICAgICAgZ290b19zY2FuZGV0YWlsOiBmdW5jdGlvbihhY3Rpdml0eV9pZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybF92YWwgPSBsb2NhdGlvbi5wcm90b2NvbCArICcvLycgKyBsb2NhdGlvbi5ob3N0ICsgJy9wcmVwYWlkL3YxL3BhZ2UvYi9hY3Rpdml0eV9kZXRhaWwuaHRtbD9hY3Rpdml0eV9pZD0nICsgYWN0aXZpdHlfaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBsb2NhdGlvbi5ocmVmID0gdXJsX3ZhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmX21lbnUuZ290b191cmwodXJsX3ZhbCk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIC8v6L+b5YWl5Yib5bu65rS75Yqo55WM6Z2iXG4gICAgICAgICAgICAgICAgICAgIGdvdG9fY3JlYXRlX2FjOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmxfdmFsID0gbG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgbG9jYXRpb24uaG9zdCArICcvcHJlcGFpZC92MS9wYWdlL2IvY3JlYXRlX2FjdGl2aXR5Lmh0bWwnO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbG9jYXRpb24uaHJlZiA9IHVybF92YWw7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZl9tZW51LmdvdG9fdXJsKHVybF92YWwpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+i/m+WFpeeri+WNs+e7rei0ueeVjOmdolxuICAgICAgICAgICAgICAgICAgICBnb3RvX3JlbmV3OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvcGVuVXJpRGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmk6aXNfcWZncm91cCA/IFwiaGpzaDovL21lbWJlci9wYXlcIiA6ICduZWFybWNodDovL3ZpZXctbWVtYmVyLXBheSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBuYXRpdmUub3BlblVyaShvcGVuVXJpRGF0YSwgZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/kuI3lhbPlv4PmlK/ku5jmiJDlip/lkozlpLHotKXpg73mmK/opoHlm57pppbpobXnmoRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2xvc2VUb1VyaSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJpOmxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvcGFnZS9iL2luZGV4Lmh0bWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlLm5hdlRvVXJpKGNsb3NlVG9VcmksIGZ1bmN0aW9uIChjYikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjYi5yZXQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+i/m+WFpeaMh+Wumua0u+WKqOS8muWRmOWIl+ihqOmhtVxuICAgICAgICAgICAgICAgICAgICBnb3RvX25vd19tZW1iZXJzOiBmdW5jdGlvbihhY3Rpdml0eV9pZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybF92YWwgPSBsb2NhdGlvbi5wcm90b2NvbCArICcvLycgKyBsb2NhdGlvbi5ob3N0ICsgJy9wcmVwYWlkL3YxL3BhZ2UvYi9tZW1iZXJzL3NwZWNpZmllcy1hY3Rpdml0eS5odG1sP2FjdGl2aXR5X2lkPScgKyBhY3Rpdml0eV9pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxvY2F0aW9uLmhyZWYgPSB1cmxfdmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWZfbWVudS5nb3RvX3VybCh1cmxfdmFsKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/ov5vlhaXmjIflrprmtLvliqjkvJrlkZjliJfooajpobVcbiAgICAgICAgICAgICAgICAgICAgZ290b19ub3dfbW9uZXk6IGZ1bmN0aW9uKGFjdGl2aXR5X2lkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsX3ZhbCA9IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3QgKyAnL3ByZXBhaWQvdjEvcGFnZS9iL3ByZXBhaWRfYW10X29mX2FjdGl2aXR5Lmh0bWw/YWN0aXZpdHlfaWQ9JyArIGFjdGl2aXR5X2lkO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbG9jYXRpb24uaHJlZiA9IHVybF92YWw7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZl9tZW51LmdvdG9fdXJsKHVybF92YWwpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+iOt+WPluWCqOWAvOmHkemineS/oeaBr1xuICAgICAgICAgICAgICAgICAgICBnZXRfbW9uZXk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgIGFqYXhfcnVsZS5hamF4X3J1bGUoX3RoaXMubW9uZXlfdXJsLCAnZ2V0JywgJ2pzb24nLCAnJywgJy56aGVjZW5nJywgZnVuY3Rpb24oZGF0YV9yZXR1cm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zdG9yZWQgPSBkYXRhX3JldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gX3RoaXMuc3RvcmVkID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogMTAwLCAvLyDlj4LkuI7ov4flgqjlgLzmtLvliqjnmoQg5oC755So5oi35pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF90eGFtdFwiOiA1MDAwMCwgLy8g5oC75YWF5YC86YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF9wYXlfYW10XCI6IDQ5ODgwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfYmFsYW5jZXNcIjogOTk5MDAsIC8vIOaAu+S9meminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/ojrflj5bkvJrlkZhcbiAgICAgICAgICAgICAgICAgICAgZ2V0X21lbWJlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBvc3RfZGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ6IDEwMDAwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpdml0eV9pZDogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgYWpheF9ydWxlLmFqYXhfcnVsZShfdGhpcy5tZW1iZXJfdXJsLCAnZ2V0JywgJ2pzb24nLCAnJywgJy56aGVjZW5nMScsIGZ1bmN0aW9uKGRhdGFfcmV0dXJuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoZGF0YV9yZXR1cm4ubGVuZ3RoPT0wKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMubWVtYmVyc2hvbWUgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMubWVtYmVyc2hvbWUgPSBkYXRhX3JldHVybi5zbGljZSgwLDUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gX3RoaXMubWVtYmVyc2hvbWUgPSBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY1wiOiBcImFiR1N2XCIsIC8vIGhhc2jkuYvlkI7nmoRjaWRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnYXZhdGFyJzogXCIuLi8uLi9zdGF0aWNfZGVzdC9zdGF0aWMvbmV3L2ltZy9oZWFkaW1nLnBuZ1wiLCAvLyDkvJrlkZjlpLTlg4/nmoRVUkxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAncmVjaGFyZ2VfdGltZXMnOiAxMCwgLy8g5Zyo6K+l5ZWG5oi35LiL57Sv6K6h5YWF5YC85qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ3JlY2hhcmdlX2FtdCc6IDUwMDAwLCAvLyDor6XmtojotLnogIXlnKjllYbmiLfkuIvntK/orqHlhYXlgLznmoTph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnbW9iaWxlJzogXCIxMzAxMjM0OTg3NlwiLCAvLyDmtojotLnogIXpppbmrKHlnKjllYbmiLfkuIvkvb/nlKjlgqjlgLzml7Ys5aGr5YaZ55qE6IGU57O75pa55byPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ25hbWUnOiBcIuaYteensFwiLCAvL+ivpea2iOi0ueeahOaYteensCwg6YCa6L+HY3VzdG9tZXLojrflvpdcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnYmFsYW5jZSc6IDUwMCwgLy8g6K+l5raI6LS56ICF5b2T5YmN5L2Z6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJjXCI6IFwiYWJHU3ZcIiwgLy8gaGFzaOS5i+WQjueahGNpZFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdhdmF0YXInOiBcIi4uLy4uL3N0YXRpY19kZXN0L3N0YXRpYy9uZXcvaW1nL2hlYWRpbWcucG5nXCIsIC8vIOS8muWRmOWktOWDj+eahFVSTFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdyZWNoYXJnZV90aW1lcyc6IDEwLCAvLyDlnKjor6XllYbmiLfkuIvntK/orqHlhYXlgLzmrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAncmVjaGFyZ2VfYW10JzogNTAwMDAsIC8vIOivpea2iOi0ueiAheWcqOWVhuaIt+S4i+e0r+iuoeWFheWAvOeahOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdtb2JpbGUnOiBcIjEzMDEyMzQ5ODc2XCIsIC8vIOa2iOi0ueiAhemmluasoeWcqOWVhuaIt+S4i+S9v+eUqOWCqOWAvOaXtizloavlhpnnmoTogZTns7vmlrnlvI9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnbmFtZSc6IFwi5pi156ewXCIsIC8v6K+l5raI6LS555qE5pi156ewLCDpgJrov4djdXN0b21lcuiOt+W+l1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdiYWxhbmNlJzogNTAwLCAvLyDor6XmtojotLnogIXlvZPliY3kvZnpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNcIjogXCJhYkdTdlwiLCAvLyBoYXNo5LmL5ZCO55qEY2lkXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ2F2YXRhcic6IFwiLi4vLi4vc3RhdGljX2Rlc3Qvc3RhdGljL25ldy9pbWcvaGVhZGltZy5wbmdcIiwgLy8g5Lya5ZGY5aS05YOP55qEVVJMXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ3JlY2hhcmdlX3RpbWVzJzogMTAsIC8vIOWcqOivpeWVhuaIt+S4i+e0r+iuoeWFheWAvOasoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICdyZWNoYXJnZV9hbXQnOiA1MDAwMCwgLy8g6K+l5raI6LS56ICF5Zyo5ZWG5oi35LiL57Sv6K6h5YWF5YC855qE6YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ21vYmlsZSc6IFwiMTMwMTIzNDk4NzZcIiwgLy8g5raI6LS56ICF6aaW5qyh5Zyo5ZWG5oi35LiL5L2/55So5YKo5YC85pe2LOWhq+WGmeeahOiBlOezu+aWueW8j1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICduYW1lJzogXCLmmLXnp7BcIiwgLy/or6XmtojotLnnmoTmmLXnp7AsIOmAmui/h2N1c3RvbWVy6I635b6XXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgJ2JhbGFuY2UnOiA1MDAsIC8vIOivpea2iOi0ueiAheW9k+WJjeS9meminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfV07XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIC8v6I635Y+W5rS75Yqo5YiX6KGoXG4gICAgICAgICAgICAgICAgICAgIGdldF9hY3Rpdml0eTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBvc3RfZGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ6IDEwMDAwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBhamF4X3J1bGUuYWpheF9ydWxlKF90aGlzLmFjdGl2aXR5X3VybCwgJ2dldCcsICdqc29uJywgcG9zdF9kYXRhLCAnLnpoZWNlbmcxJywgZnVuY3Rpb24oZGF0YV9yZXR1cm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5hY3Rpb25fYWxsID0gZGF0YV9yZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYWN0aXZpdGllcyA9IF90aGlzLmFjdGlvbl9hbGwuc2xpY2UoMCwgX3RoaXMuYWN0aW9uX3Bvcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYWN0aW9uX2luZyA9IF90aGlzLmFjdGl2aXRpZXNbMF0uc3RhdHVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Yik5pat5Yqo55S7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmFjdGl2aXRpZXMubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZG9uZ2h1YV9pZihfdGhpcy5hY3Rpdml0aWVzWzBdLmFjdGl2aXR5X2lkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmFjdGlvbl9hbGwubGVuZ3RoIC0gX3RoaXMuYWN0aW9uX3BvcyA8PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbF9tb3JlLm5vbW9yZWRhdGFfc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2V0VGltZW91dChzY3JvbGxfbW9yZS5ub21vcmVkYXRhX2hpZGUsIDIwMDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5ub21vcl9zaG93ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbF9tb3JlLnNjcm9sbF9kYXRhLnNjcm9sbF9pZiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmFjdGlvbl9wb3MgKz0gX3RoaXMuYWN0aW9uX2NvdW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5zY3JvbGxfaWYgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5ib2R5X2hlaWdodCA9IE1hdGguZmxvb3IoJCgnYm9keScpLmhlaWdodCgpKzkwKS50b0ZpeGVkKDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5sb2FkJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ0FKQVg6c2Nyb2xsX2lmPT0nICsgc2Nyb2xsX21vcmUuc2Nyb2xsX2RhdGEuc2Nyb2xsX2lmKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdBSkFYOm5vbW9yX3Nob3c9PScgKyBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5ub21vcl9zaG93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gX3RoaXMuYWN0aW9uX2FsbCA9IFt7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGFydF90aW1lXCI6IFwiMjAxNi0wOS0yMiAxMToyMjozM1wiLCAvLyDmtLvliqjlvIDlp4vml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImVuZF90aW1lXCI6IFwiMjAxNy0xMC0yMyAyMjoyMjoyMlwiLCAvLyDmtLvliqjnu5PmnZ/ml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2aXR5X2lkXCI6IDEyMzQsIC8vIOa0u+WKqElEXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ1c2VyX251bVwiOiAxMDAsIC8vIOWPguS4juW9k+WJjea0u+WKqOeahOeUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfdHhhbXRcIjogNTAwMDAsIC8vIOaAu+WFheWAvOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfcGF5X2FtdFwiOiAxNDkwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY291bnRkb3duX2RheVwiOiAyLCAvLyDmtLvliqjov5jmnInlpJrlsJHlpKnlvIDlp4ssIOWNleS9jTog5aSpLiDlkJHkuIrlj5bmlbQsIOWmgjEuNeWkqSAtPiAy5aSpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3RpdmVcIjogMSwgLy8g5rS75Yqo5piv5ZCm5pyJ5pWILiAxIOacieaViCwgMCDml6DmlYgo5ZWG5oi35Li75Yqo5YGc5q2iKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhdHVzXCI6IDAsIC8vIDA6IHjlpKnlkI7lvIDlp4ssIOWkqeaVsOS7jmNvdW50ZG93bl9kYXnkuK3lj5YsIDE6IOi/m+ihjOS4rSwgMjog5bey57uT5p2fLCAzOiDlt7Lnu4jmraJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImRldGFpbFwiOiBbIC8vIOaMiWdyaWRfaW5kZXjmjpLluo9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDEsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDUw5YWD6YCBNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAyLCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxMDDlhYPpgIExMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhcnRfdGltZVwiOiBcIjIwMTYtMDktMjIgMTE6MjI6MzNcIiwgLy8g5rS75Yqo5byA5aeL5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJlbmRfdGltZVwiOiBcIjIwMTYtMTAtMjMgMjI6MjI6MjJcIiwgLy8g5rS75Yqo57uT5p2f5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3Rpdml0eV9pZFwiOiAxMjM0LCAvLyDmtLvliqhJRFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogMjAwLCAvLyDlj4LkuI7lvZPliY3mtLvliqjnmoTnlKjmiLfmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3R4YW10XCI6IDUwMDAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3BheV9hbXRcIjogMjQ5MDAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNvdW50ZG93bl9kYXlcIjogMiwgLy8g5rS75Yqo6L+Y5pyJ5aSa5bCR5aSp5byA5aeLLCDljZXkvY06IOWkqS4g5ZCR5LiK5Y+W5pW0LCDlpoIxLjXlpKkgLT4gMuWkqVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZlXCI6IDEsIC8vIOa0u+WKqOaYr+WQpuacieaViC4gMSDmnInmlYgsIDAg5peg5pWIKOWVhuaIt+S4u+WKqOWBnOatoilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXR1c1wiOiAxLCAvLyAwOiB45aSp5ZCO5byA5aeLLCDlpKnmlbDku45jb3VudGRvd25fZGF55Lit5Y+WLCAxOiDov5vooYzkuK0sIDI6IOW3sue7k+adnywgMzog5bey57uI5q2iXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJkZXRhaWxcIjogWyAvLyDmjIlncmlkX2luZGV45o6S5bqPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAxLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLw1MOWFg+mAgTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogMTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDIsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDEwMOWFg+mAgTEw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDI1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAzLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxNTDlhYPpgIExNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1MyAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogNCwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MjAw5YWD6YCBMzDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGFydF90aW1lXCI6IFwiMjAxNi0wOS0yMiAxMToyMjozM1wiLCAvLyDmtLvliqjlvIDlp4vml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImVuZF90aW1lXCI6IFwiMjAxNi0xMC0yMyAyMjoyMjoyMlwiLCAvLyDmtLvliqjnu5PmnZ/ml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2aXR5X2lkXCI6IDEyMzQsIC8vIOa0u+WKqElEXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ1c2VyX251bVwiOiAzMDAsIC8vIOWPguS4juW9k+WJjea0u+WKqOeahOeUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfdHhhbXRcIjogNTAwMDAsIC8vIOaAu+WFheWAvOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfcGF5X2FtdFwiOiAzNDkwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY291bnRkb3duX2RheVwiOiAyLCAvLyDmtLvliqjov5jmnInlpJrlsJHlpKnlvIDlp4ssIOWNleS9jTog5aSpLiDlkJHkuIrlj5bmlbQsIOWmgjEuNeWkqSAtPiAy5aSpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3RpdmVcIjogMSwgLy8g5rS75Yqo5piv5ZCm5pyJ5pWILiAxIOacieaViCwgMCDml6DmlYgo5ZWG5oi35Li75Yqo5YGc5q2iKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhdHVzXCI6IDIsIC8vIDA6IHjlpKnlkI7lvIDlp4ssIOWkqeaVsOS7jmNvdW50ZG93bl9kYXnkuK3lj5YsIDE6IOi/m+ihjOS4rSwgMjog5bey57uT5p2fLCAzOiDlt7Lnu4jmraJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImRldGFpbFwiOiBbIC8vIOaMiWdyaWRfaW5kZXjmjpLluo9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDEsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDUw5YWD6YCBNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAyLCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxMDDlhYPpgIExMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhcnRfdGltZVwiOiBcIjIwMTYtMDktMjIgMTE6MjI6MzNcIiwgLy8g5rS75Yqo5byA5aeL5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJlbmRfdGltZVwiOiBcIjIwMTYtMTAtMjMgMjI6MjI6MjJcIiwgLy8g5rS75Yqo57uT5p2f5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3Rpdml0eV9pZFwiOiAxMjM0LCAvLyDmtLvliqhJRFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogNDAwLCAvLyDlj4LkuI7lvZPliY3mtLvliqjnmoTnlKjmiLfmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3R4YW10XCI6IDUwMDAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3BheV9hbXRcIjogNDQ5MDAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNvdW50ZG93bl9kYXlcIjogMiwgLy8g5rS75Yqo6L+Y5pyJ5aSa5bCR5aSp5byA5aeLLCDljZXkvY06IOWkqS4g5ZCR5LiK5Y+W5pW0LCDlpoIxLjXlpKkgLT4gMuWkqVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZlXCI6IDEsIC8vIOa0u+WKqOaYr+WQpuacieaViC4gMSDmnInmlYgsIDAg5peg5pWIKOWVhuaIt+S4u+WKqOWBnOatoilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXR1c1wiOiAzLCAvLyAwOiB45aSp5ZCO5byA5aeLLCDlpKnmlbDku45jb3VudGRvd25fZGF55Lit5Y+WLCAxOiDov5vooYzkuK0sIDI6IOW3sue7k+adnywgMzog5bey57uI5q2iXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJkZXRhaWxcIjogWyAvLyDmjIlncmlkX2luZGV45o6S5bqPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAxLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLw1MOWFg+mAgTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogMTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDIsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDEwMOWFg+mAgTEw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDI1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAzLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxNTDlhYPpgIExNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1MyAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogNCwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MjAw5YWD6YCBMzDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXJ0X3RpbWVcIjogXCIyMDE2LTA5LTIyIDExOjIyOjMzXCIsIC8vIOa0u+WKqOW8gOWni+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZW5kX3RpbWVcIjogXCIyMDE2LTEwLTIzIDIyOjIyOjIyXCIsIC8vIOa0u+WKqOe7k+adn+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZpdHlfaWRcIjogMTIzNCwgLy8g5rS75YqoSURcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInVzZXJfbnVtXCI6IDMwMCwgLy8g5Y+C5LiO5b2T5YmN5rS75Yqo55qE55So5oi35pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF90eGFtdFwiOiA1MDAwMCwgLy8g5oC75YWF5YC86YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF9wYXlfYW10XCI6IDM0OTAwMCwgLy8g5oC75pSv5LuY6YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJjb3VudGRvd25fZGF5XCI6IDIsIC8vIOa0u+WKqOi/mOacieWkmuWwkeWkqeW8gOWniywg5Y2V5L2NOiDlpKkuIOWQkeS4iuWPluaVtCwg5aaCMS415aSpIC0+IDLlpKlcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2ZVwiOiAxLCAvLyDmtLvliqjmmK/lkKbmnInmlYguIDEg5pyJ5pWILCAwIOaXoOaViCjllYbmiLfkuLvliqjlgZzmraIpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGF0dXNcIjogMiwgLy8gMDogeOWkqeWQjuW8gOWniywg5aSp5pWw5LuOY291bnRkb3duX2RheeS4reWPliwgMTog6L+b6KGM5LitLCAyOiDlt7Lnu5PmnZ8sIDM6IOW3sue7iOatolxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZGV0YWlsXCI6IFsgLy8g5oyJZ3JpZF9pbmRleOaOkuW6j1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMSwgLy8g5YKo5YC85qC85L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8NTDlhYPpgIE15YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDIsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDEwMOWFg+mAgTEw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGFydF90aW1lXCI6IFwiMjAxNi0wOS0yMiAxMToyMjozM1wiLCAvLyDmtLvliqjlvIDlp4vml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImVuZF90aW1lXCI6IFwiMjAxNi0xMC0yMyAyMjoyMjoyMlwiLCAvLyDmtLvliqjnu5PmnZ/ml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2aXR5X2lkXCI6IDEyMzQsIC8vIOa0u+WKqElEXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ1c2VyX251bVwiOiA0MDAsIC8vIOWPguS4juW9k+WJjea0u+WKqOeahOeUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfdHhhbXRcIjogNTAwMDAsIC8vIOaAu+WFheWAvOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfcGF5X2FtdFwiOiA0NDkwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY291bnRkb3duX2RheVwiOiAyLCAvLyDmtLvliqjov5jmnInlpJrlsJHlpKnlvIDlp4ssIOWNleS9jTog5aSpLiDlkJHkuIrlj5bmlbQsIOWmgjEuNeWkqSAtPiAy5aSpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3RpdmVcIjogMSwgLy8g5rS75Yqo5piv5ZCm5pyJ5pWILiAxIOacieaViCwgMCDml6DmlYgo5ZWG5oi35Li75Yqo5YGc5q2iKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhdHVzXCI6IDMsIC8vIDA6IHjlpKnlkI7lvIDlp4ssIOWkqeaVsOS7jmNvdW50ZG93bl9kYXnkuK3lj5YsIDE6IOi/m+ihjOS4rSwgMjog5bey57uT5p2fLCAzOiDlt7Lnu4jmraJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImRldGFpbFwiOiBbIC8vIOaMiWdyaWRfaW5kZXjmjpLluo9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDEsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDUw5YWD6YCBNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiAxNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMiwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MTAw5YWD6YCBMTDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogMjUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDMsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDE1MOWFg+mAgTE15YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDUzIC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiA0LCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwyMDDlhYPpgIEzMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1NSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0se1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhcnRfdGltZVwiOiBcIjIwMTYtMDktMjIgMTE6MjI6MzNcIiwgLy8g5rS75Yqo5byA5aeL5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJlbmRfdGltZVwiOiBcIjIwMTYtMTAtMjMgMjI6MjI6MjJcIiwgLy8g5rS75Yqo57uT5p2f5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3Rpdml0eV9pZFwiOiAxMjM0LCAvLyDmtLvliqhJRFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogMzAwLCAvLyDlj4LkuI7lvZPliY3mtLvliqjnmoTnlKjmiLfmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3R4YW10XCI6IDUwMDAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3BheV9hbXRcIjogMzQ5MDAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNvdW50ZG93bl9kYXlcIjogMiwgLy8g5rS75Yqo6L+Y5pyJ5aSa5bCR5aSp5byA5aeLLCDljZXkvY06IOWkqS4g5ZCR5LiK5Y+W5pW0LCDlpoIxLjXlpKkgLT4gMuWkqVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZlXCI6IDEsIC8vIOa0u+WKqOaYr+WQpuacieaViC4gMSDmnInmlYgsIDAg5peg5pWIKOWVhuaIt+S4u+WKqOWBnOatoilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXR1c1wiOiAyLCAvLyAwOiB45aSp5ZCO5byA5aeLLCDlpKnmlbDku45jb3VudGRvd25fZGF55Lit5Y+WLCAxOiDov5vooYzkuK0sIDI6IOW3sue7k+adnywgMzog5bey57uI5q2iXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJkZXRhaWxcIjogWyAvLyDmjIlncmlkX2luZGV45o6S5bqPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAxLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLw1MOWFg+mAgTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMiwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MTAw5YWD6YCBMTDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXJ0X3RpbWVcIjogXCIyMDE2LTA5LTIyIDExOjIyOjMzXCIsIC8vIOa0u+WKqOW8gOWni+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZW5kX3RpbWVcIjogXCIyMDE2LTEwLTIzIDIyOjIyOjIyXCIsIC8vIOa0u+WKqOe7k+adn+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZpdHlfaWRcIjogMTIzNCwgLy8g5rS75YqoSURcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInVzZXJfbnVtXCI6IDQwMCwgLy8g5Y+C5LiO5b2T5YmN5rS75Yqo55qE55So5oi35pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF90eGFtdFwiOiA1MDAwMCwgLy8g5oC75YWF5YC86YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF9wYXlfYW10XCI6IDQ0OTAwMCwgLy8g5oC75pSv5LuY6YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJjb3VudGRvd25fZGF5XCI6IDIsIC8vIOa0u+WKqOi/mOacieWkmuWwkeWkqeW8gOWniywg5Y2V5L2NOiDlpKkuIOWQkeS4iuWPluaVtCwg5aaCMS415aSpIC0+IDLlpKlcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2ZVwiOiAxLCAvLyDmtLvliqjmmK/lkKbmnInmlYguIDEg5pyJ5pWILCAwIOaXoOaViCjllYbmiLfkuLvliqjlgZzmraIpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGF0dXNcIjogMywgLy8gMDogeOWkqeWQjuW8gOWniywg5aSp5pWw5LuOY291bnRkb3duX2RheeS4reWPliwgMTog6L+b6KGM5LitLCAyOiDlt7Lnu5PmnZ8sIDM6IOW3sue7iOatolxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZGV0YWlsXCI6IFsgLy8g5oyJZ3JpZF9pbmRleOaOkuW6j1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMSwgLy8g5YKo5YC85qC85L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8NTDlhYPpgIE15YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDE1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAyLCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxMDDlhYPpgIExMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiAyNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMywgLy8g5YKo5YC85qC85L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MTUw5YWD6YCBMTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNTMgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDQsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDIwMOWFg+mAgTMw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDU1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSx7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGFydF90aW1lXCI6IFwiMjAxNi0wOS0yMiAxMToyMjozM1wiLCAvLyDmtLvliqjlvIDlp4vml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImVuZF90aW1lXCI6IFwiMjAxNi0xMC0yMyAyMjoyMjoyMlwiLCAvLyDmtLvliqjnu5PmnZ/ml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2aXR5X2lkXCI6IDEyMzQsIC8vIOa0u+WKqElEXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ1c2VyX251bVwiOiAzMDAsIC8vIOWPguS4juW9k+WJjea0u+WKqOeahOeUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfdHhhbXRcIjogNTAwMDAsIC8vIOaAu+WFheWAvOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfcGF5X2FtdFwiOiAzNDkwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY291bnRkb3duX2RheVwiOiAyLCAvLyDmtLvliqjov5jmnInlpJrlsJHlpKnlvIDlp4ssIOWNleS9jTog5aSpLiDlkJHkuIrlj5bmlbQsIOWmgjEuNeWkqSAtPiAy5aSpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3RpdmVcIjogMSwgLy8g5rS75Yqo5piv5ZCm5pyJ5pWILiAxIOacieaViCwgMCDml6DmlYgo5ZWG5oi35Li75Yqo5YGc5q2iKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhdHVzXCI6IDIsIC8vIDA6IHjlpKnlkI7lvIDlp4ssIOWkqeaVsOS7jmNvdW50ZG93bl9kYXnkuK3lj5YsIDE6IOi/m+ihjOS4rSwgMjog5bey57uT5p2fLCAzOiDlt7Lnu4jmraJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImRldGFpbFwiOiBbIC8vIOaMiWdyaWRfaW5kZXjmjpLluo9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDEsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDUw5YWD6YCBNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAyLCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxMDDlhYPpgIExMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhcnRfdGltZVwiOiBcIjIwMTYtMDktMjIgMTE6MjI6MzNcIiwgLy8g5rS75Yqo5byA5aeL5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJlbmRfdGltZVwiOiBcIjIwMTYtMTAtMjMgMjI6MjI6MjJcIiwgLy8g5rS75Yqo57uT5p2f5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3Rpdml0eV9pZFwiOiAxMjM0LCAvLyDmtLvliqhJRFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogNDAwLCAvLyDlj4LkuI7lvZPliY3mtLvliqjnmoTnlKjmiLfmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3R4YW10XCI6IDUwMDAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3BheV9hbXRcIjogNDQ5MDAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNvdW50ZG93bl9kYXlcIjogMiwgLy8g5rS75Yqo6L+Y5pyJ5aSa5bCR5aSp5byA5aeLLCDljZXkvY06IOWkqS4g5ZCR5LiK5Y+W5pW0LCDlpoIxLjXlpKkgLT4gMuWkqVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZlXCI6IDEsIC8vIOa0u+WKqOaYr+WQpuacieaViC4gMSDmnInmlYgsIDAg5peg5pWIKOWVhuaIt+S4u+WKqOWBnOatoilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXR1c1wiOiAzLCAvLyAwOiB45aSp5ZCO5byA5aeLLCDlpKnmlbDku45jb3VudGRvd25fZGF55Lit5Y+WLCAxOiDov5vooYzkuK0sIDI6IOW3sue7k+adnywgMzog5bey57uI5q2iXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJkZXRhaWxcIjogWyAvLyDmjIlncmlkX2luZGV45o6S5bqPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAxLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLw1MOWFg+mAgTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogMTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDIsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDEwMOWFg+mAgTEw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDI1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAzLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxNTDlhYPpgIExNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1MyAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogNCwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MjAw5YWD6YCBMzDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXJ0X3RpbWVcIjogXCIyMDE2LTA5LTIyIDExOjIyOjMzXCIsIC8vIOa0u+WKqOW8gOWni+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZW5kX3RpbWVcIjogXCIyMDE2LTEwLTIzIDIyOjIyOjIyXCIsIC8vIOa0u+WKqOe7k+adn+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZpdHlfaWRcIjogMTIzNCwgLy8g5rS75YqoSURcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInVzZXJfbnVtXCI6IDMwMCwgLy8g5Y+C5LiO5b2T5YmN5rS75Yqo55qE55So5oi35pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF90eGFtdFwiOiA1MDAwMCwgLy8g5oC75YWF5YC86YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF9wYXlfYW10XCI6IDM0OTAwMCwgLy8g5oC75pSv5LuY6YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJjb3VudGRvd25fZGF5XCI6IDIsIC8vIOa0u+WKqOi/mOacieWkmuWwkeWkqeW8gOWniywg5Y2V5L2NOiDlpKkuIOWQkeS4iuWPluaVtCwg5aaCMS415aSpIC0+IDLlpKlcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2ZVwiOiAxLCAvLyDmtLvliqjmmK/lkKbmnInmlYguIDEg5pyJ5pWILCAwIOaXoOaViCjllYbmiLfkuLvliqjlgZzmraIpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGF0dXNcIjogMiwgLy8gMDogeOWkqeWQjuW8gOWniywg5aSp5pWw5LuOY291bnRkb3duX2RheeS4reWPliwgMTog6L+b6KGM5LitLCAyOiDlt7Lnu5PmnZ8sIDM6IOW3sue7iOatolxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZGV0YWlsXCI6IFsgLy8g5oyJZ3JpZF9pbmRleOaOkuW6j1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMSwgLy8g5YKo5YC85qC85L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8NTDlhYPpgIE15YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDIsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDEwMOWFg+mAgTEw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGFydF90aW1lXCI6IFwiMjAxNi0wOS0yMiAxMToyMjozM1wiLCAvLyDmtLvliqjlvIDlp4vml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImVuZF90aW1lXCI6IFwiMjAxNi0xMC0yMyAyMjoyMjoyMlwiLCAvLyDmtLvliqjnu5PmnZ/ml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2aXR5X2lkXCI6IDEyMzQsIC8vIOa0u+WKqElEXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ1c2VyX251bVwiOiA0MDAsIC8vIOWPguS4juW9k+WJjea0u+WKqOeahOeUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfdHhhbXRcIjogNTAwMDAsIC8vIOaAu+WFheWAvOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfcGF5X2FtdFwiOiA0NDkwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY291bnRkb3duX2RheVwiOiAyLCAvLyDmtLvliqjov5jmnInlpJrlsJHlpKnlvIDlp4ssIOWNleS9jTog5aSpLiDlkJHkuIrlj5bmlbQsIOWmgjEuNeWkqSAtPiAy5aSpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3RpdmVcIjogMSwgLy8g5rS75Yqo5piv5ZCm5pyJ5pWILiAxIOacieaViCwgMCDml6DmlYgo5ZWG5oi35Li75Yqo5YGc5q2iKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhdHVzXCI6IDMsIC8vIDA6IHjlpKnlkI7lvIDlp4ssIOWkqeaVsOS7jmNvdW50ZG93bl9kYXnkuK3lj5YsIDE6IOi/m+ihjOS4rSwgMjog5bey57uT5p2fLCAzOiDlt7Lnu4jmraJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImRldGFpbFwiOiBbIC8vIOaMiWdyaWRfaW5kZXjmjpLluo9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDEsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDUw5YWD6YCBNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiAxNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMiwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MTAw5YWD6YCBMTDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogMjUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDMsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDE1MOWFg+mAgTE15YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDUzIC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiA0LCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwyMDDlhYPpgIEzMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1NSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0se1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhcnRfdGltZVwiOiBcIjIwMTYtMDktMjIgMTE6MjI6MzNcIiwgLy8g5rS75Yqo5byA5aeL5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJlbmRfdGltZVwiOiBcIjIwMTYtMTAtMjMgMjI6MjI6MjJcIiwgLy8g5rS75Yqo57uT5p2f5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3Rpdml0eV9pZFwiOiAxMjM0LCAvLyDmtLvliqhJRFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogMzAwLCAvLyDlj4LkuI7lvZPliY3mtLvliqjnmoTnlKjmiLfmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3R4YW10XCI6IDUwMDAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3BheV9hbXRcIjogMzQ5MDAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNvdW50ZG93bl9kYXlcIjogMiwgLy8g5rS75Yqo6L+Y5pyJ5aSa5bCR5aSp5byA5aeLLCDljZXkvY06IOWkqS4g5ZCR5LiK5Y+W5pW0LCDlpoIxLjXlpKkgLT4gMuWkqVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZlXCI6IDEsIC8vIOa0u+WKqOaYr+WQpuacieaViC4gMSDmnInmlYgsIDAg5peg5pWIKOWVhuaIt+S4u+WKqOWBnOatoilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXR1c1wiOiAyLCAvLyAwOiB45aSp5ZCO5byA5aeLLCDlpKnmlbDku45jb3VudGRvd25fZGF55Lit5Y+WLCAxOiDov5vooYzkuK0sIDI6IOW3sue7k+adnywgMzog5bey57uI5q2iXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJkZXRhaWxcIjogWyAvLyDmjIlncmlkX2luZGV45o6S5bqPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAxLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLw1MOWFg+mAgTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMiwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MTAw5YWD6YCBMTDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXJ0X3RpbWVcIjogXCIyMDE2LTA5LTIyIDExOjIyOjMzXCIsIC8vIOa0u+WKqOW8gOWni+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZW5kX3RpbWVcIjogXCIyMDE2LTEwLTIzIDIyOjIyOjIyXCIsIC8vIOa0u+WKqOe7k+adn+aXtumXtFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZpdHlfaWRcIjogMTIzNCwgLy8g5rS75YqoSURcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInVzZXJfbnVtXCI6IDQwMCwgLy8g5Y+C5LiO5b2T5YmN5rS75Yqo55qE55So5oi35pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF90eGFtdFwiOiA1MDAwMCwgLy8g5oC75YWF5YC86YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ0b3RhbF9wYXlfYW10XCI6IDQ0OTAwMCwgLy8g5oC75pSv5LuY6YeR6aKdXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJjb3VudGRvd25fZGF5XCI6IDIsIC8vIOa0u+WKqOi/mOacieWkmuWwkeWkqeW8gOWniywg5Y2V5L2NOiDlpKkuIOWQkeS4iuWPluaVtCwg5aaCMS415aSpIC0+IDLlpKlcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2ZVwiOiAxLCAvLyDmtLvliqjmmK/lkKbmnInmlYguIDEg5pyJ5pWILCAwIOaXoOaViCjllYbmiLfkuLvliqjlgZzmraIpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGF0dXNcIjogMywgLy8gMDogeOWkqeWQjuW8gOWniywg5aSp5pWw5LuOY291bnRkb3duX2RheeS4reWPliwgMTog6L+b6KGM5LitLCAyOiDlt7Lnu5PmnZ8sIDM6IOW3sue7iOatolxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiZGV0YWlsXCI6IFsgLy8g5oyJZ3JpZF9pbmRleOaOkuW6j1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMSwgLy8g5YKo5YC85qC85L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8NTDlhYPpgIE15YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDE1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAyLCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxMDDlhYPpgIExMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiAyNSAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogMywgLy8g5YKo5YC85qC85L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MTUw5YWD6YCBMTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNTMgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDQsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDIwMOWFg+mAgTMw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDU1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSx7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJzdGFydF90aW1lXCI6IFwiMjAxNi0wOS0yMiAxMToyMjozM1wiLCAvLyDmtLvliqjlvIDlp4vml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImVuZF90aW1lXCI6IFwiMjAxNi0xMC0yMyAyMjoyMjoyMlwiLCAvLyDmtLvliqjnu5PmnZ/ml7bpl7RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImFjdGl2aXR5X2lkXCI6IDEyMzQsIC8vIOa0u+WKqElEXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJ1c2VyX251bVwiOiAzMDAsIC8vIOWPguS4juW9k+WJjea0u+WKqOeahOeUqOaIt+aVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfdHhhbXRcIjogNTAwMDAsIC8vIOaAu+WFheWAvOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidG90YWxfcGF5X2FtdFwiOiAzNDkwMDAsIC8vIOaAu+aUr+S7mOmHkeminVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiY291bnRkb3duX2RheVwiOiAyLCAvLyDmtLvliqjov5jmnInlpJrlsJHlpKnlvIDlp4ssIOWNleS9jTog5aSpLiDlkJHkuIrlj5bmlbQsIOWmgjEuNeWkqSAtPiAy5aSpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3RpdmVcIjogMSwgLy8g5rS75Yqo5piv5ZCm5pyJ5pWILiAxIOacieaViCwgMCDml6DmlYgo5ZWG5oi35Li75Yqo5YGc5q2iKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhdHVzXCI6IDIsIC8vIDA6IHjlpKnlkI7lvIDlp4ssIOWkqeaVsOS7jmNvdW50ZG93bl9kYXnkuK3lj5YsIDE6IOi/m+ihjOS4rSwgMjog5bey57uT5p2fLCAzOiDlt7Lnu4jmraJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImRldGFpbFwiOiBbIC8vIOaMiWdyaWRfaW5kZXjmjpLluo9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDEsIC8vIOWCqOWAvOagvOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDUw5YWD6YCBNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAyLCAvLyDlgqjlgLzlkITkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxMDDlhYPpgIExMOWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwic3RhcnRfdGltZVwiOiBcIjIwMTYtMDktMjIgMTE6MjI6MzNcIiwgLy8g5rS75Yqo5byA5aeL5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJlbmRfdGltZVwiOiBcIjIwMTYtMTAtMjMgMjI6MjI6MjJcIiwgLy8g5rS75Yqo57uT5p2f5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJhY3Rpdml0eV9pZFwiOiAxMjM0LCAvLyDmtLvliqhJRFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwidXNlcl9udW1cIjogNDAwLCAvLyDlj4LkuI7lvZPliY3mtLvliqjnmoTnlKjmiLfmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3R4YW10XCI6IDUwMDAwLCAvLyDmgLvlhYXlgLzph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInRvdGFsX3BheV9hbXRcIjogNDQ5MDAwLCAvLyDmgLvmlK/ku5jph5Hpop1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcImNvdW50ZG93bl9kYXlcIjogMiwgLy8g5rS75Yqo6L+Y5pyJ5aSa5bCR5aSp5byA5aeLLCDljZXkvY06IOWkqS4g5ZCR5LiK5Y+W5pW0LCDlpoIxLjXlpKkgLT4gMuWkqVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIFwiYWN0aXZlXCI6IDEsIC8vIOa0u+WKqOaYr+WQpuacieaViC4gMSDmnInmlYgsIDAg5peg5pWIKOWVhuaIt+S4u+WKqOWBnOatoilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBcInN0YXR1c1wiOiAzLCAvLyAwOiB45aSp5ZCO5byA5aeLLCDlpKnmlbDku45jb3VudGRvd25fZGF55Lit5Y+WLCAxOiDov5vooYzkuK0sIDI6IOW3sue7k+adnywgMzog5bey57uI5q2iXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJkZXRhaWxcIjogWyAvLyDmjIlncmlkX2luZGV45o6S5bqPXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAxLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLw1MOWFg+mAgTXlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogMTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJncmlkX2luZGV4XCI6IDIsIC8vIOWCqOWAvOWQhOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIuWCqOWAvDEwMOWFg+mAgTEw5YWDXCIsIC8vIOinhOWImeivtOaYjlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgXCJwcmVwYWlkX3RpbWVzXCI6IDI1IC8vIOWCqOWAvOasoeaVsCwg5rOo5oSP5piv5qyh5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwiZ3JpZF9pbmRleFwiOiAzLCAvLyDlgqjlgLzmoLzkvY1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwidGl0bGVcIjogXCLlgqjlgLwxNTDlhYPpgIExNeWFg1wiLCAvLyDop4TliJnor7TmmI5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIFwicHJlcGFpZF90aW1lc1wiOiA1MyAvLyDlgqjlgLzmrKHmlbAsIOazqOaEj+aYr+asoeaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcImdyaWRfaW5kZXhcIjogNCwgLy8g5YKo5YC85ZCE5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5YKo5YC8MjAw5YWD6YCBMzDlhYNcIiwgLy8g6KeE5YiZ6K+05piOXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICBcInByZXBhaWRfdGltZXNcIjogNTUgLy8g5YKo5YC85qyh5pWwLCDms6jmhI/mmK/mrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIF90aGlzLmFjdGl2aXRpZXMgPSBfdGhpcy5hY3Rpb25fYWxsLnNsaWNlKDAsIF90aGlzLmFjdGlvbl9wb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gX3RoaXMuYWN0aW9uX2luZyA9IF90aGlzLmFjdGl2aXRpZXNbMF0uc3RhdHVzO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpZiAoX3RoaXMuYWN0aW9uX2FsbC5sZW5ndGggLSBfdGhpcy5hY3Rpb25fcG9zIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBzY3JvbGxfbW9yZS5ub21vcmVkYXRhX3Nob3coKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICB3aW5kb3cuc2V0VGltZW91dChzY3JvbGxfbW9yZS5ub21vcmVkYXRhX2hpZGUsIDIwMDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIHNjcm9sbF9tb3JlLnNjcm9sbF9kYXRhLm5vbW9yX3Nob3cgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5zY3JvbGxfaWYgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgX3RoaXMuYWN0aW9uX3BvcyArPSBfdGhpcy5hY3Rpb25fY291bnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgc2Nyb2xsX21vcmUuc2Nyb2xsX2RhdGEuc2Nyb2xsX2lmID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNjcm9sbF9tb3JlLnNjcm9sbF9kYXRhLmJvZHlfaGVpZ2h0ID0gTWF0aC5mbG9vcigkKCdib2R5JykuaGVpZ2h0KCkrOTApLnRvRml4ZWQoMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAkKCcubG9hZCcpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdBSkFYOnNjcm9sbF9pZj09JyArIHNjcm9sbF9tb3JlLnNjcm9sbF9kYXRhLnNjcm9sbF9pZik7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnQUpBWDpub21vcl9zaG93PT0nICsgc2Nyb2xsX21vcmUuc2Nyb2xsX2RhdGEubm9tb3Jfc2hvdyk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIC8v6I635Y+W6LS555So5piv5ZCm5Yiw5pyfXG4gICAgICAgICAgICAgICAgICAgIGdldF9kdWU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3N0X2RhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDogeWFuemhlbmcuZ2V0X2hhc2goJ2gnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBhamF4X3J1bGUuYWpheF9ydWxlKF90aGlzLmR1ZV91cmwsICdnZXQnLCAnanNvbicsICcnLCAnLnpoZWNlbmcyJywgZnVuY3Rpb24oZGF0YV9yZXR1cm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5kdWVfZmVlID0gZGF0YV9yZXR1cm4uZXhwaXJlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19xZmdyb3VwID0gZGF0YV9yZXR1cm4uaXNfcWZncm91cDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9fdGhpcy5kdWVfZmVlID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/ojrflj5bmm7TlpJrmlbDmja5cbiAgICAgICAgICAgICAgICAgICAgZ2V0X21vcmVkYXRhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZpdGllcyA9IHRoaXMuYWN0aW9uX2FsbC5zbGljZSgwLCB0aGlzLmFjdGlvbl9wb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5hY3Rpdml0aWVzLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3Rpb25fYWxsLmxlbmd0aCAtIHRoaXMuYWN0aW9uX3BvcyA8PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsX21vcmUubm9tb3JlZGF0YV9zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoc2Nyb2xsX21vcmUubm9tb3JlZGF0YV9oaWRlLCAyMDAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5ub21vcl9zaG93ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsX21vcmUuc2Nyb2xsX2RhdGEuc2Nyb2xsX2lmID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aW9uX3BvcyArPSB0aGlzLmFjdGlvbl9jb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5zY3JvbGxfaWYgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmxvYWQnKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQUpBWDpzY3JvbGxfaWY9PScgKyBzY3JvbGxfbW9yZS5zY3JvbGxfZGF0YS5zY3JvbGxfaWYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0FKQVg6bm9tb3Jfc2hvdz09JyArIHNjcm9sbF9tb3JlLnNjcm9sbF9kYXRhLm5vbW9yX3Nob3cpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+WIpOaWreWKqOeUu+aYr+WQpuWHuueOsFxuICAgICAgICAgICAgICAgICAgICBkb25naHVhX2lmOiBmdW5jdGlvbihhY3Rpdml0eV9pZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3N0X2RhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2d1aWRlX3R5cGUnOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhY3Rpdml0eV9pZCc6IGFjdGl2aXR5X2lkXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgYWpheF9ydWxlLmFqYXhfcnVsZSgnL3ByZXBhaWQvdjEvYXBpL2IvZ3VpZGUnLCAnZ2V0JywgJ2pzb24nLCBwb3N0X2RhdGEsICcuemhlY2VuZzInLCBmdW5jdGlvbihkYXRhX3JldHVybikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzaG93ID0gZGF0YV9yZXR1cm4uc2hvdztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdyA9PSAnMScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lj5HpgIHlt7LosIPnlKjliqjnlLtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybF9kYXRhID0geyB1cmk6ICdoanNoOi8vcHBheS9ndWlkZScgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlLm9wZW5VcmkodXJsX2RhdGEsIGZ1bmN0aW9uKGNiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjYi5yZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZG9uZ2h1YV9vZmYoYWN0aXZpdHlfaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+WPkemAgeW3suiwg+eUqOWKqOeUu1xuICAgICAgICAgICAgICAgICAgICBkb25naHVhX29mZjogZnVuY3Rpb24oYWN0aXZpdHlfaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcG9zdF9kYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdndWlkZV90eXBlJzogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYWN0aXZpdHlfaWQnOiBhY3Rpdml0eV9pZFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFqYXhfcnVsZS5hamF4X3J1bGUoJy9wcmVwYWlkL3YxL2FwaS9iL2d1aWRlJywgJ1BPU1QnLCAnanNvbicsIHBvc3RfZGF0YSwgJy56aGVjZW5nMScpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+WkhOeQhuaXtumXtOagvOW8j+S7jjIwMTYtMDktMjIgMTE6MjI6MzPliLAyMDE2LjkuMThcbiAgICAgICAgICAgICAgICAgICAgZGF0ZWNoYW5nZTogZnVuY3Rpb24odGltZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVfdmFsID0gdGltZS5zdWJzdHIoMCwgMTApO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVfdmFsdWUgPSBkYXRlX3ZhbC5zcGxpdCgnLScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHllYXIgPSBkYXRlX3ZhbHVlWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1vbnRoID0gdGhpcy5udW1fY2hhbmdlKGRhdGVfdmFsdWVbMV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRheSA9IHRoaXMubnVtX2NoYW5nZShkYXRlX3ZhbHVlWzJdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdfZGF0ZSA9IHllYXIgKyAnLicgKyBtb250aCArICcuJyArIGRheTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXdfZGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/lpITnkIbnu5PmnZ/ml7bpl7TmoLzlvI/vvIzlpoLmnpx0aW1lMuWSjHRpbWUx5bm05Lu955u45ZCM77yM5YiZdGltZTLlj6rov5Tlm57mnIjku73lkozml6XmnJ/vvJvlkKbliJnov5Tlm57lrozmlbTnmoTlubTmnIjml6VcbiAgICAgICAgICAgICAgICAgICAgZGF0ZWNoYW5nZTI6IGZ1bmN0aW9uKHRpbWUxLCB0aW1lMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVfdmFsMSA9IHRpbWUxLnN1YnN0cigwLCAxMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZV92YWwyID0gdGltZTIuc3Vic3RyKDAsIDEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlX3ZhbHVlMSA9IGRhdGVfdmFsMS5zcGxpdCgnLScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGVfdmFsdWUyID0gZGF0ZV92YWwyLnNwbGl0KCctJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgeWVhcjEgPSBkYXRlX3ZhbHVlMVswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB5ZWFyMiA9IGRhdGVfdmFsdWUyWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1vbnRoID0gdGhpcy5udW1fY2hhbmdlKGRhdGVfdmFsdWUyWzFdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXkgPSB0aGlzLm51bV9jaGFuZ2UoZGF0ZV92YWx1ZTJbMl0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHllYXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoeWVhcjEgIT0geWVhcjIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geWVhcjIgKyAnLicgKyBtb250aCArICcuJyArIGRheTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vbnRoICsgJy4nICsgZGF5O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvL+WkhOeQhuaXpeacnzHkvY3mlbBcbiAgICAgICAgICAgICAgICAgICAgbnVtX2NoYW5nZTogZnVuY3Rpb24obnVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobnVtIDwgMTApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVtLnN1YnN0cigtMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgfSlcbn0pXG4iXX0=
