"use strict";function click_chulist(e){$(e).addClass("li_choose").siblings("li").removeClass("li_choose")}require(["../require-config"],function(){require(["zepto","yanzheng","ajax_rule","localstorage","date_change","native","if_menu"],function($,e,t,a,i,n,s){$(function(){function s(){var e=a.getone_storage("start_time"),t=e.split("-");e?$(".js_startime").text(t[0]+"年"+t[1]+"月"+t[2]+"日"):$(".js_startime").text("");var i=a.getone_storage("end_time"),n=i.split("-");i?$(".js_endtime").text(n[0]+"年"+n[1]+"月"+n[2]+"日"):$(".js_endtime").text("");var s=JSON.parse(a.getone_storage("rules"));if(!s)return!1;var r="";r=1==s.length?"li_one":2==s.length?"li_two":"";for(var o=0;o<s.length;o++){var l=(s[o].pay_amt/100).toFixed(0),c=(s[o].present_amt/100).toFixed(0),_=s[o].grid_index,g='<li onclick="click_chulist(this)" data-index="'+_+'" class="'+r+'"><p class="font_17">储值<span>'+l+"</span>元</p><p>送<span>"+c+'</span>元</p><span class="choose"><i class="choose_i"></i></span></li>';$(".js_rechage_ul").append(g)}$(".js_rechage_ul li").eq(0).addClass("li_choose")}function r(e){a.clean_storage(o);var t={uri:location.protocol+"//"+location.host+"/prepaid/v1/page/b/index.html"};n.navToUri(t,function(e){console.log(e.ret)})}var o=["start_time","end_time","rules","desc","mch_mobile","merchant_name"];$(document).ready(function(){a.get_storage(s)}),$(".js_preview_sub").on("click",function(){var n=a.get_data_all(o);n.start_time=i.time_change_long(n.start_time)+" 00:00:00",n.end_time=i.time_change_long(n.end_time)+" 23:59:59";for(var s=JSON.parse(n.rules),l="[",c=0;c<s.length;c++){var _,g=s[c];_="0"==c?JSON.stringify(g):","+JSON.stringify(g),l+=_}l+="]",n.rules=l;var p=e.get_hash("edit");"mend"==p?t.ajax_rule("/prepaid/v1/api/b/activity/alter","POST","json",n,".zheceng",r):t.ajax_rule("/prepaid/v1/api/b/activity","POST","json",n,".zheceng",r)})})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
