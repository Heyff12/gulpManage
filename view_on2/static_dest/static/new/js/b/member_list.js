"use strict";function memberto(e){_hmt.push(["_trackEvent","member","click","member_detail"]);var o=$(e).attr("data-c"),t=location.protocol+"//"+location.host+"/prepaid/v1/page/b/members/detail.html?c="+o;"undefined"!=typeof QFPAY?QFPAY.call("openUri",{uri:t},function(e){console.log(e.ret)}):location.href=t}require(["../require-config2"],function(){require(["zepto","yanzheng","ajax_rule","scroll_more","if_menu"],function($,e,o,t,l){$(function(){t.add_load_img(".js_member_list");new Vue({el:".js_member_detail",data:{searchkey:"",members_all:"",members:"",members_count:10,members_pos:10,apiUrl:location.protocol+"//"+location.host+"/prepaid/v1/api/b/members",getdata:{pos:0,count:1e4}},mounted:function(){this.get_members(),t.scroll_more(this.get_moredata)},updated:function(){t.scroll_data.body_height=Math.floor($("body").height()).toFixed(0),console.log("AJAX:body_height=="+t.scroll_data.body_height)},methods:{member_ser:function(e){var o=this.searchkey;return!(e.length<=0)&&e.filter(function(e){return"-1"!=e.name.indexOf(o)||"-1"!=e.mobile.indexOf(o)})},get_members:function(){var e=this;this.$http.get(this.apiUrl,{before:function(){$("#load_small_bg").show()}}).then(function(o){$("#load_small_bg").hide();var l=JSON.parse(o.data);if("0000"==l.respcd){if(e.members_all=l.data,0==e.members_all.length)return $(".js_li_none").show(),$(".js_member_detail").hide(),!1;$(".js_li_none").hide(),$(".js_member_detail").show(),e.members=e.members_all.slice(0,e.members_pos),e.members_all.length-e.members_pos<=0?(t.nomoredata_show(),window.setTimeout(t.nomoredata_hide,2e3),t.scroll_data.nomor_show=!1,t.scroll_data.scroll_if=!1):(e.members_pos+=e.members_count,t.scroll_data.scroll_if=!0),t.scroll_data.body_height=Math.floor($("body").height()).toFixed(0),$(".load").hide()}else $("#alert_alert").show(),$(".zheceng").show(),l.respmsg?$("#alert_alert .alert_con_br").html(l.respmsg):$("#alert_alert .alert_con_br").html(l.resperr)},function(e){$("#load_small_bg").hide(),$("#alert_alert").show(),$(".zheceng").show(),$("#alert_alert .alert_con_br").html("网络超时!")}).catch(function(e){$("#load_small_bg").hide()})},get_moredata:function(){this.members=this.members_all.slice(0,this.members_pos),console.log(this.members.length),this.members_all.length-this.members_pos<=0?(t.nomoredata_show(),window.setTimeout(t.nomoredata_hide,2e3),t.scroll_data.nomor_show=!1,t.scroll_data.scroll_if=!1):(this.members_pos+=this.members_count,t.scroll_data.scroll_if=!0),$(".load").hide(),console.log("AJAX:scroll_if=="+t.scroll_data.scroll_if),console.log("AJAX:nomor_show=="+t.scroll_data.nomor_show)}}})})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
