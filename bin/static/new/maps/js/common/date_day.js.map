{"version":3,"sources":["common/date_day.js"],"names":["define","formatYear","nowYear","arr","i","push","id","value","formatYear_birth","year_s","year_e","formatMonth","time_free","month_long","formatDate","count","day_long","start_year","end_year","start_num","end_num","now","Date","getFullYear","nowMonth","getMonth","nowDate","getDate","yearData","callback","setTimeout","monthData","year","dateData","month","substr","test","Error"],"mappings":"AAAAA,OAAO,WAgBH,QAASC,GAAWC,GAEhB,IAAK,GADDC,MACKC,EAAIF,EAAU,GAAIE,GAAKF,EAAU,GAAIE,IAC1CD,EAAIE,MACAC,GAAIF,EAAI,GACRG,MAAOH,EAAI,KAGnB,OAAOD,GAGX,QAASK,GAAiBC,EAAQC,GAG9B,IAAK,GADDP,MACKC,EAAIK,EAAQL,GAAKM,EAAQN,IAC9BD,EAAIE,MACAC,GAAIF,EAAI,GACRG,MAAOH,EAAI,KAGnB,OAAOD,GAGX,QAASQ,KAEL,IAAK,GADDR,MACKC,EAAI,EAAGA,GAAK,GAAIA,IACO,MAAxBQ,EAAUC,YACNT,EAAI,KACJA,EAAI,IAAMA,GAGlBD,EAAIE,MACAC,GAAIF,EAAI,GACRG,MAAOH,EAAI,KAGnB,OAAOD,GAGX,QAASW,GAAWC,GAGhB,IAAK,GADDZ,MACKC,EAAI,EAAGA,GAAKW,EAAOX,IACE,MAAtBQ,EAAUI,UACNZ,EAAI,KACJA,EAAI,IAAMA,GAGlBD,EAAIE,MACAC,GAAIF,EAAI,GACRG,MAAOH,EAAI,KAGnB,OAAOD,GAnEX,GAAIS,IACAK,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,SAAS,EACTP,YAAY,EACZG,UAAU,GAGVK,EAAM,GAAIC,MACVpB,EAAUmB,EAAIE,cACdC,EAAWH,EAAII,WAAa,EAC5BC,EAAUL,EAAIM,UAyDdC,EAAW,SAASC,GAEpB,GAA4B,MAAxBjB,EAAUK,YAA4C,MAAtBL,EAAUM,UAA2C,MAAvBN,EAAUO,WAA0C,MAArBP,EAAUQ,QACvGU,WAAW,WACPD,EAAS5B,EAAWC,KACrB,OACA,CACH,GAAIO,GAAQC,CAERD,GADwB,MAAxBG,EAAUK,WACDf,EAAUU,EAAUO,UAEpBP,EAAUK,WAGnBP,EADsB,MAAtBE,EAAUM,SACDhB,EAAUU,EAAUQ,QAEpBR,EAAUM,SAEvBY,WAAW,WACPD,EAASrB,EAAiBC,EAAQC,KACnC,KAIPqB,EAAY,SAASC,EAAMH,GAC3BC,WAAW,WACPD,EAASlB,MACV,IAEHsB,EAAW,SAASD,EAAME,EAAOL,GACL,MAAxBjB,EAAUC,YACgB,KAAtBqB,EAAMC,OAAO,EAAG,KAChBD,EAAQA,EAAMC,OAAO,EAAG,IAGhCL,WAAW,WACP,GAAI,kBAAkBM,KAAKF,GAEvBL,EAASf,EAAW,SACjB,IAAI,aAAasB,KAAKF,GAEzBL,EAASf,EAAW,SACjB,IAAI,MAAMsB,KAAKF,GAElBL,EAASf,EAAW,SACjB,CAAA,IAAI,MAAMsB,KAAKF,GAOlB,KAAM,IAAIG,OAAM,mBALZR,GADAG,EAAO,IAAM,GAAKA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,EAC5ClB,EAAW,IAEXA,EAAW,OAK7B,GAaP,QACIF,UAAWA,EACXgB,SAAUA,EACVG,UAAWA,EACXE,SAAUA,EACV/B,QAASA,EACTsB,SAAUA,EACVE,QAASA","file":"../../../js/common/date_day.js","sourcesContent":["define(function() {　\n    //自定义时间\n    var time_free = {\n        start_year: -1,\n        end_year: -1,\n        start_num: -1,\n        end_num: -1,\n        month_long: -1, //默认显示1，2，3，否则01 02 03\n        day_long: -1, //默认显示1，2，3，否则01 02 03\n    };\n    // 初始化时间\n    var now = new Date();\n    var nowYear = now.getFullYear();\n    var nowMonth = now.getMonth() + 1;\n    var nowDate = now.getDate();\n    // 数据初始化\n    function formatYear(nowYear) {\n        var arr = [];\n        for (var i = nowYear - 70; i <= nowYear + 70; i++) {\n            arr.push({\n                id: i + '',\n                value: i + '年'\n            });\n        }\n        return arr;\n    }\n    // 日期可控数据初始化\n    function formatYear_birth(year_s, year_e) {\n        //-1为默认值，则不自定义设计时间段\n        var arr = [];\n        for (var i = year_s; i <= year_e; i++) {\n            arr.push({\n                id: i + '',\n                value: i + '年'\n            });\n        }\n        return arr;\n    }\n\n    function formatMonth() {\n        var arr = [];\n        for (var i = 1; i <= 12; i++) {\n            if (time_free.month_long != '-1') {\n                if (i < 10) {\n                    i = '0' + i;\n                }\n            }\n            arr.push({\n                id: i + '',\n                value: i + '月'\n            });\n        }\n        return arr;\n    }\n\n    function formatDate(count) {\n        //console.log(count);\n        var arr = [];\n        for (var i = 1; i <= count; i++) {\n            if (time_free.day_long != '-1') {\n                if (i < 10) {\n                    i = '0' + i;\n                }\n            }\n            arr.push({\n                id: i + '',\n                value: i + '日'\n            });\n        }\n        return arr;\n    }\n    var yearData = function(callback) {\n        //-1为默认值，则不自定义设计时间段;如果为空，则调用默认的前后70年\n        if (time_free.start_year == '-1' && time_free.end_year == '-1' && time_free.start_num == '-1' && time_free.end_num == '-1') {\n            setTimeout(function() {\n                callback(formatYear(nowYear))\n            }, 0)\n        } else {\n            var year_s, year_e;\n            if (time_free.start_year == '-1') {\n                year_s = nowYear - time_free.start_num;\n            } else {\n                year_s = time_free.start_year;\n            }\n            if (time_free.end_year == '-1') {\n                year_e = nowYear + time_free.end_num;\n            } else {\n                year_e = time_free.end_year;\n            }\n            setTimeout(function() {\n                callback(formatYear_birth(year_s, year_e));\n            }, 0)\n        }\n\n    }\n    var monthData = function(year, callback) {\n        setTimeout(function() {\n            callback(formatMonth());\n        }, 0);\n    };\n    var dateData = function(year, month, callback) {\n        if (time_free.month_long != '-1') {\n            if (month.substr(0, 1) == '0') {\n                month = month.substr(1, 1);\n            }\n        }\n        setTimeout(function() {\n            if (/^3|5|7|8|10|12$/.test(month)) {\n                //console.log(month);\n                callback(formatDate(31));\n            } else if (/^4|6|9|11$/.test(month)) {\n                //console.log(month);\n                callback(formatDate(30));\n            } else if (/^1$/.test(month)) {\n                //console.log(month);\n                callback(formatDate(31));\n            } else if (/^2$/.test(month)) {\n                if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {\n                    callback(formatDate(29));\n                } else {\n                    callback(formatDate(28));\n                }\n            } else {\n                throw new Error('month is illegal');\n            }\n        }, 0);\n        // ajax请求可以这样写\n        /*\n        $.ajax({\n            type: 'get',\n            url: '/example',\n            success: function(data) {\n                callback(data);\n            }\n        });\n        */\n    };\n\n    return {\n        time_free: time_free, //设置自定义年份\n        yearData: yearData, //日期插件显示的对应时间\n        monthData: monthData, //日期插件显示的对应时间\n        dateData: dateData, //日期插件显示的对应时间\n        nowYear: nowYear, //当前年份\n        nowMonth: nowMonth, //当前月\n        nowDate: nowDate, //当前天\n    };　\n});\n"]}