{"version":3,"sources":["common/jsbridge.js"],"names":["define","setupWebViewJavascriptBridge","callback","window","QFPAY","WVJBCallbacks","push","WVJBIframe","document","createElement","style","display","src","documentElement","appendChild","setTimeout","removeChild","connectWebViewJavascriptBridge","addEventListener","bridge","isAndroid","init","message","responseCallback","data","Javascript Responds","JSBridge","H5CallNative","param","call","name","response","runActionQueue","index","actionQueue","ua","navigator","userAgent","test"],"mappings":"AAAAA,OAAO,WAmBH,QAASC,GAA6BC,GAElC,GAAIC,OAAOC,MAEP,MAAOF,GAASC,OAAOC,MAE3B,IAAID,OAAOE,cAEP,MAAOF,QAAOE,cAAcC,KAAKJ,EAErCC,QAAOE,eAAiBH,EACxB,IAAIK,GAAaC,SAASC,cAAc,SACxCF,GAAWG,MAAMC,QAAU,OAC3BJ,EAAWK,IAAM,iCACjBJ,SAASK,gBAAgBC,YAAYP,GACrCQ,WAAW,WACPP,SAASK,gBAAgBG,YAAYT,IACtC,GAIP,QAASU,GAA+Bf,GAChCC,OAAOC,MACPF,EAASC,OAAOC,OAEhBI,SAASU,iBAAiB,+BAAgC,WACtDhB,EAASC,OAAOC,SACjB,GAUX,QAASF,GAASiB,GAGVC,KACAD,EAAOE,KAAK,SAASC,EAASC,GAE1B,GAAIC,IAASC,sBAAuB,OAEpCF,GAAiBC,KAWzBE,EAASC,aAAe,SAASC,GAW7BT,EAAOU,KAAKD,EAAME,KAAMF,EAAMJ,KAAM,SAASO,GAEzCH,EAAM1B,UAAY0B,EAAM1B,SAAS6B,MAgBzCC,IAIJ,QAASA,KACL,IAAK,GAAIC,KAASC,GACdR,EAASC,aAAaO,EAAYD,IA7G1C,GAAIC,MACAR,GACAC,aAAc,SAASC,GAEnBM,EAAY5B,KAAKsB,KAIrBR,EAAY,WACR,GAAIe,GAAKC,UAAUC,SACnB,OAAO,WAAaC,KAAKH,GAwGjC,OAjEIf,KACAH,EAA+Bf,GAE/BD,EAA6BC,IA+D7BwB,SAAUA","file":"../../../js/common/jsbridge.js","sourcesContent":["define(function() {　\n    var actionQueue = []\n    var JSBridge = {\n        H5CallNative: function(param) {\n            // 环境还未准备好,bridge 还未注入,H5跟 Native还不能交互,放进队列中\n            actionQueue.push(param)\n        }\n    }\n\n    var isAndroid = function() {\n            var ua = navigator.userAgent\n            return (/Android/i).test(ua)\n        }\n        // var isIos = function () {\n        //   var ua = navigator.userAgent\n        //   return (/Mac OS X/i).test(ua)\n        // }\n\n    // IOS\n    function setupWebViewJavascriptBridge(callback) {\n        // console.log('-> setupWebViewJavascriptBridge run...')\n        if (window.QFPAY) {\n            // console.log('-> setupWebViewJavascriptBridge is 注入...')\n            return callback(window.QFPAY)\n        }\n        if (window.WVJBCallbacks) {\n            // console.log('-> WVJBCallbacks push callback...')\n            return window.WVJBCallbacks.push(callback)\n        }\n        window.WVJBCallbacks = [callback]\n        var WVJBIframe = document.createElement('iframe')\n        WVJBIframe.style.display = 'none'\n        WVJBIframe.src = 'wvjbscheme://__BRIDGE_LOADED__'\n        document.documentElement.appendChild(WVJBIframe)\n        setTimeout(function() {\n            document.documentElement.removeChild(WVJBIframe)\n        }, 0)\n    }\n\n    // Android\n    function connectWebViewJavascriptBridge(callback) {\n        if (window.QFPAY) {\n            callback(window.QFPAY)\n        } else {\n            document.addEventListener('WebViewJavascriptBridgeReady', function() {\n                callback(window.QFPAY)\n            }, false)\n        }\n    }\n\n    if (isAndroid()) {\n        connectWebViewJavascriptBridge(callback)\n    } else {\n        setupWebViewJavascriptBridge(callback)\n    }\n\n    function callback(bridge) {\n        // console.log('-> setupWebViewJavascriptBridge callback run...')\n\n        if (isAndroid()) {\n            bridge.init(function(message, responseCallback) {\n                // console.log('JS got a message', message)\n                var data = { 'Javascript Responds': 'Wee!' }\n                    // console.log('JS responding with', data)\n                responseCallback(data)\n            })\n        }\n\n        /**\n         * H5 调 Native事件 H5CallNative\n         * @param  {[object]} param [description]\n         * param.data：传给 Native参数\n         * param.callback：Native回调(异步？)\n         * @return {[type]}       [description]\n         */\n        JSBridge.H5CallNative = function(param) {\n            // console.log('--> JS Call H5CallNative param:', param)\n\n            // bridge.callHandler('testObjcCallback', param.data, function (response) {\n\n            // var data = {\n            //   schema: 'near-merchant-native',\n            //   path: 'https://o2.qfpay.com/merchant/v2/settleinfo',\n            //   action: 'get',\n            //   params: param.data\n            // }\n            bridge.call(param.name, param.data, function(response) {\n                // console.log('JS call OC OK!!!', response)\n                param.callback && param.callback(response)\n            })\n        }\n\n        // Native 调 H5事件 QFNativeCallH5\n        // bridge.registerHandler('QFNativeCallH5', function (data, responseCallback) {\n        //   // console.log('ObjC called testJavascriptHandler with（原生调用JS testJavascriptHandler()）', data)\n        //   var responseData = {\n        //     'Javascript Says': 'Right back atcha!'\n        //   }\n        //   // console.log('JS responding with（JS响应）', responseData)\n        //   // 回调\n        //   responseCallback(responseData)\n        // })\n\n        // 执行环境未准备好之前的事件队列\n        runActionQueue()\n    }\n\n    // 执行环境未准备好之前的事件队列\n    function runActionQueue() {\n        for (var index in actionQueue) {\n            JSBridge.H5CallNative(actionQueue[index])\n        }\n    }\n\n    //module.exports = JSBridge\n    return {\n        JSBridge: JSBridge,\n    };　\n});\n"]}